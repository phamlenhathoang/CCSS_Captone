// <auto-generated />
using System;
using CCSS_Repository.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCSS_Repository.Migrations
{
    [DbContext(typeof(CCSSDbContext))]
    partial class CCSSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CCSS_Repository.Entities.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("AverageStar")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLock")
                        .HasColumnType("bit");

                    b.Property<bool?>("Leader")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnTask")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("SalaryIndex")
                        .HasColumnType("float");

                    b.Property<int?>("TaskQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountId = "A001",
                            AverageStar = 4.5,
                            Email = "john@example.com",
                            Height = 180f,
                            IsActive = true,
                            IsLock = false,
                            Name = "John Doe",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 45000.0,
                            Weight = 75f
                        },
                        new
                        {
                            AccountId = "A002",
                            Email = "jane@example.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "Jane Smith",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R001"
                        },
                        new
                        {
                            AccountId = "A003",
                            Email = "phuongnam26012002@gmail.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "Nammmmmmmm",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R005"
                        },
                        new
                        {
                            AccountId = "A004",
                            AverageStar = 4.2000000000000002,
                            Email = "bob@example.com",
                            Height = 175f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Bob Brown",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 42000.0,
                            Weight = 80f
                        },
                        new
                        {
                            AccountId = "A005",
                            AverageStar = 3.5,
                            Email = "charlie@example.com",
                            Height = 182f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Charlie White",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 35000.0,
                            Weight = 78f
                        },
                        new
                        {
                            AccountId = "A006",
                            Email = "david@example.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "David Black",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R005"
                        },
                        new
                        {
                            AccountId = "A007",
                            AverageStar = 4.0999999999999996,
                            Email = "emma@example.com",
                            Height = 168f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Emma Green",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 41000.0,
                            Weight = 60f
                        },
                        new
                        {
                            AccountId = "A008",
                            AverageStar = 4.5999999999999996,
                            Email = "frank@example.com",
                            Height = 185f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Frank Blue",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 46000.0,
                            Weight = 85f
                        },
                        new
                        {
                            AccountId = "A009",
                            Email = "grace@example.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "Grace Pink",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R001"
                        },
                        new
                        {
                            AccountId = "A010",
                            AverageStar = 2.5,
                            Email = "henry@example.com",
                            Height = 178f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Henry Purple",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 25000.0,
                            Weight = 77f
                        },
                        new
                        {
                            AccountId = "A011",
                            Email = "isla@example.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "Isla Red",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R005"
                        },
                        new
                        {
                            AccountId = "A012",
                            AverageStar = 3.7999999999999998,
                            Email = "jack@example.com",
                            Height = 172f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Jack Yellow",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 38000.0,
                            Weight = 70f
                        },
                        new
                        {
                            AccountId = "A013",
                            AverageStar = 2.5,
                            Email = "katie@example.com",
                            Height = 165f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Katie Orange",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 25000.0,
                            Weight = 55f
                        },
                        new
                        {
                            AccountId = "A014",
                            Email = "liam@example.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "Liam Gray",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R005"
                        },
                        new
                        {
                            AccountId = "A015",
                            AverageStar = 1.5,
                            Email = "mia@example.com",
                            Height = 170f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Mia Cyan",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 15000.0,
                            Weight = 65f
                        },
                        new
                        {
                            AccountId = "A016",
                            AverageStar = 3.7000000000000002,
                            Email = "noah@example.com",
                            Height = 175f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Noah Silver",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 37000.0,
                            Weight = 70f
                        },
                        new
                        {
                            AccountId = "A017",
                            AverageStar = 4.7999999999999998,
                            Email = "olivia@example.com",
                            Height = 168f,
                            IsActive = true,
                            Name = "Olivia Gold",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 48000.0,
                            Weight = 55f
                        },
                        new
                        {
                            AccountId = "A018",
                            AverageStar = 3.2000000000000002,
                            Email = "william@example.com",
                            Height = 180f,
                            IsActive = true,
                            IsLock = false,
                            Name = "William Amber",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 32000.0,
                            Weight = 75f
                        },
                        new
                        {
                            AccountId = "A019",
                            AverageStar = 3.2999999999999998,
                            Email = "sophia@example.com",
                            Height = 165f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Sophia Ivory",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 33000.0,
                            Weight = 50f
                        },
                        new
                        {
                            AccountId = "A020",
                            AverageStar = 3.3999999999999999,
                            Email = "james@example.com",
                            Height = 178f,
                            IsActive = true,
                            IsLock = false,
                            Name = "James Navy",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 34000.0,
                            Weight = 72f
                        },
                        new
                        {
                            AccountId = "A021",
                            AverageStar = 3.5,
                            Email = "ava@example.com",
                            Height = 162f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Ava Teal",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 35000.0,
                            Weight = 48f
                        },
                        new
                        {
                            AccountId = "A022",
                            AverageStar = 3.6000000000000001,
                            Email = "benjamin@example.com",
                            Height = 177f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Benjamin Lime",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 36000.0,
                            Weight = 70f
                        },
                        new
                        {
                            AccountId = "A023",
                            AverageStar = 3.7000000000000002,
                            Email = "charlotte@example.com",
                            Height = 164f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Charlotte Beige",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 37000.0,
                            Weight = 52f
                        },
                        new
                        {
                            AccountId = "A024",
                            AverageStar = 3.7999999999999998,
                            Email = "lucas@example.com",
                            Height = 180f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Lucas Maroon",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 38000.0,
                            Weight = 74f
                        },
                        new
                        {
                            AccountId = "A025",
                            AverageStar = 3.8999999999999999,
                            Email = "mia@example.com",
                            Height = 159f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Mia Pearl",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 39000.0,
                            Weight = 47f
                        },
                        new
                        {
                            AccountId = "A026",
                            AverageStar = 2.5,
                            Email = "ethan@example.com",
                            Height = 176f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Ethan Olive",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 25000.0,
                            Weight = 71f
                        },
                        new
                        {
                            AccountId = "A027",
                            AverageStar = 2.6000000000000001,
                            Email = "amelia@example.com",
                            Height = 167f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Amelia Ruby",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 26000.0,
                            Weight = 53f
                        },
                        new
                        {
                            AccountId = "A028",
                            AverageStar = 2.7000000000000002,
                            Email = "henry@example.com",
                            Height = 182f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Henry Saffron",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 27000.0,
                            Weight = 76f
                        },
                        new
                        {
                            AccountId = "A029",
                            AverageStar = 2.7999999999999998,
                            Email = "ella@example.com",
                            Height = 160f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Ella Coral",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 28000.0,
                            Weight = 49f
                        },
                        new
                        {
                            AccountId = "A030",
                            AverageStar = 2.8999999999999999,
                            Email = "daniel@example.com",
                            Height = 175f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Daniel Cyan",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 29000.0,
                            Weight = 72f
                        },
                        new
                        {
                            AccountId = "A031",
                            AverageStar = 3.0,
                            Email = "logan@example.com",
                            Height = 180f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Logan Indigo",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 30000.0,
                            Weight = 73f
                        },
                        new
                        {
                            AccountId = "A032",
                            AverageStar = 4.0,
                            Email = "lily@example.com",
                            Height = 165f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Lily Violet",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 40000.0,
                            Weight = 52f
                        },
                        new
                        {
                            AccountId = "A033",
                            AverageStar = 4.0999999999999996,
                            Email = "mason@example.com",
                            Height = 178f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Mason Turquoise",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 41000.0,
                            Weight = 74f
                        },
                        new
                        {
                            AccountId = "A034",
                            AverageStar = 4.2000000000000002,
                            Email = "zoe@example.com",
                            Height = 160f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Zoe Lavender",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 42000.0,
                            Weight = 48f
                        },
                        new
                        {
                            AccountId = "A035",
                            AverageStar = 4.2999999999999998,
                            Email = "elijah@example.com",
                            Height = 182f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Elijah Crimson",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 43000.0,
                            Weight = 77f
                        },
                        new
                        {
                            AccountId = "A036",
                            AverageStar = 4.4000000000000004,
                            Email = "aria@example.com",
                            Height = 164f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Aria Mint",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 44000.0,
                            Weight = 50f
                        },
                        new
                        {
                            AccountId = "A037",
                            AverageStar = 4.5,
                            Email = "sebastian@example.com",
                            Height = 179f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Sebastian Bronze",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 45000.0,
                            Weight = 72f
                        },
                        new
                        {
                            AccountId = "A038",
                            AverageStar = 4.5999999999999996,
                            Email = "harper@example.com",
                            Height = 168f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Harper Rose",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 46000.0,
                            Weight = 53f
                        },
                        new
                        {
                            AccountId = "A039",
                            AverageStar = 4.7000000000000002,
                            Email = "caleb@example.com",
                            Height = 181f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Caleb Onyx",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 47000.0,
                            Weight = 75f
                        },
                        new
                        {
                            AccountId = "A040",
                            AverageStar = 4.7999999999999998,
                            Email = "scarlett@example.com",
                            Height = 162f,
                            IsActive = true,
                            IsLock = false,
                            Name = "Scarlett Magenta",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R004",
                            SalaryIndex = 48000.0,
                            Weight = 51f
                        },
                        new
                        {
                            AccountId = "A041",
                            Email = "manager@example.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "Manager",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R002"
                        },
                        new
                        {
                            AccountId = "A042",
                            Email = "consultant@example.com",
                            IsActive = true,
                            IsLock = false,
                            Name = "Consultant",
                            Password = "ZkmcwLVZC7B06TE7qd/qoA==",
                            RoleId = "R003"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.AccountCoupon", b =>
                {
                    b.Property<string>("AccountCouponId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CouponId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountCouponId");

                    b.HasIndex("AccountId");

                    b.HasIndex("CouponId");

                    b.ToTable("AccountCoupon");

                    b.HasData(
                        new
                        {
                            AccountCouponId = "AC001",
                            AccountId = "A001",
                            CouponId = "CP001",
                            EndDate = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC002",
                            AccountId = "A002",
                            CouponId = "CP002",
                            EndDate = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC003",
                            AccountId = "A003",
                            CouponId = "CP003",
                            EndDate = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC004",
                            AccountId = "A004",
                            CouponId = "CP004",
                            EndDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC005",
                            AccountId = "A005",
                            CouponId = "CP005",
                            EndDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC006",
                            AccountId = "A001",
                            CouponId = "CP006",
                            EndDate = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC007",
                            AccountId = "A002",
                            CouponId = "CP007",
                            EndDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC008",
                            AccountId = "A003",
                            CouponId = "CP008",
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC009",
                            AccountId = "A004",
                            CouponId = "CP009",
                            EndDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC010",
                            AccountId = "A005",
                            CouponId = "CP010",
                            EndDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC011",
                            AccountId = "A006",
                            CouponId = "CP011",
                            EndDate = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            StartDate = new DateTime(2024, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC012",
                            AccountId = "A007",
                            CouponId = "CP012",
                            EndDate = new DateTime(2024, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC013",
                            AccountId = "A008",
                            CouponId = "CP013",
                            EndDate = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC014",
                            AccountId = "A009",
                            CouponId = "CP014",
                            EndDate = new DateTime(2024, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            StartDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AccountCouponId = "AC015",
                            AccountId = "A010",
                            CouponId = "CP015",
                            EndDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.AccountImage", b =>
                {
                    b.Property<string>("AccountImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAvatar")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountImageId");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountImage");

                    b.HasData(
                        new
                        {
                            AccountImageId = "AI01",
                            AccountId = "A001",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3582),
                            IsAvatar = true,
                            UrlImage = "https://tftravel.com.vn/wp-content/uploads/2021/02/team-1.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI02",
                            AccountId = "A001",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3608),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/originals/a6/bc/25/a6bc259bd4209b1f9dddf93607f68644.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI03",
                            AccountId = "A001",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3610),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/a9/2a/9e/a92a9ed46b8cc1067dc20840d3c4fee5.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI04",
                            AccountId = "A001",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3612),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/4e/86/e2/4e86e2cfd4b1b45e5faa6cf872b1a905.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI05",
                            AccountId = "A002",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3614),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/f1/82/ce/f182ce676795a62d00036da861a90c33.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI06",
                            AccountId = "A002",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3616),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/aa/95/35/aa953549f4b2bb159d9e726e3ff3a2ed.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI07",
                            AccountId = "A002",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3618),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/3b/d8/1b/3bd81b616374e74b3fa33dbc916dbfcc.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI08",
                            AccountId = "A002",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3620),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/93/f9/d8/93f9d842e536468ff7503d6ceda91dca.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI09",
                            AccountId = "A005",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3622),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/15/f5/46/15f546b7df5498113d23bb5b02497548.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI10",
                            AccountId = "A005",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3626),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/b0/8c/a9/b08ca9db4b5c47fe25428da2823c9a41.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI11",
                            AccountId = "A005",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3627),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/fb/ec/67/fbec67d903362ff4ffd6bc4489f4910d.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI12",
                            AccountId = "A005",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3629),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/6f/86/0a/6f860aa99e78fdd33ad516dfb84fb13f.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI13",
                            AccountId = "A007",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3631),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/ca/42/d9/ca42d9541580d5542fa29a568a68a714.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI14",
                            AccountId = "A007",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3633),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/3e/ba/30/3eba305131695dd20a6a1203fe955c04.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI15",
                            AccountId = "A007",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3636),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/15/0c/3c/150c3c6df16d0f3b976f07529801a8e5.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI16",
                            AccountId = "A007",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3638),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/04/56/a8/0456a8ccfe96917fdc56703d2e3cca17.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI17",
                            AccountId = "A008",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3640),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/4a/1d/4d/4a1d4d05f09b833adb9a78af8be2137f.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI18",
                            AccountId = "A008",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3644),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/2b/80/60/2b8060ca82bfb42642f1ec4aefe39428.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI19",
                            AccountId = "A008",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3646),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/81/6b/79/816b79ab93e73d6240177d7da8e345a8.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI20",
                            AccountId = "A008",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3647),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/da/69/57/da695796f69212dfb2440d2b2e3f6800.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI21",
                            AccountId = "A010",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3650),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/a5/67/52/a56752ef994d5c6cf6499b4cef52e2f7.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI22",
                            AccountId = "A010",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3652),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/e8/79/74/e87974221b2c629e6b8652d69e8d137d.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI23",
                            AccountId = "A010",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3654),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/99/84/d9/9984d9e425ac3663fe5d24e49cb38eed.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI24",
                            AccountId = "A010",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3656),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/47/ec/be/47ecbea5cfac28fafe8e19faaa355342.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI25",
                            AccountId = "A012",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3658),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/ef/ba/25/efba25ef9c63e7294340de6f14048795.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI26",
                            AccountId = "A012",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3661),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/93/d2/55/93d2552c5c6a0f90d867c4617f33d0d1.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI27",
                            AccountId = "A012",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3663),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/7e/62/d7/7e62d70e323b92b166026ab145e1703e.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI28",
                            AccountId = "A012",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3666),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/42/de/11/42de11b557fe83b3040178671db20b73.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI29",
                            AccountId = "A016",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3668),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/c6/49/e8/c649e8f88170ebf177e6910bfc518696.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI30",
                            AccountId = "A016",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3670),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/77/3d/e8/773de85e694e8f88ed08ff5509ae4355.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI31",
                            AccountId = "A016",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3672),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/26/94/bd/2694bd3519bcfd0cdf518d6b5ead8684.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI32",
                            AccountId = "A016",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3674),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/83/67/8f/83678f4941b8d106136201deebb26bc7.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI33",
                            AccountId = "A017",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3676),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/95/57/ce/9557ce89bef894c11242f90d0e11ed88.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI34",
                            AccountId = "A017",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3679),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/6c/3d/32/6c3d329db2a87ce681754b0a70040d07.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI35",
                            AccountId = "A017",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3681),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/04/5b/91/045b9179ebdede69c3aba42195fd47b2.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI36",
                            AccountId = "A017",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3683),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/05/7c/0a/057c0a4c922c6f98b8d9715bb537ab83.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI37",
                            AccountId = "A018",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3685),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/8a/ef/b2/8aefb28db28939806440e3de90c5b029.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI38",
                            AccountId = "A018",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3687),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/53/75/08/537508f69d893602a3cbb031ae699ba5.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI39",
                            AccountId = "A018",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3717),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/0f/f2/67/0ff26774a0f4fd7745a77d92dc1a3443.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI40",
                            AccountId = "A018",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3719),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/dd/a5/9b/dda59b436bb82a60da6910e9b556b932.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI41",
                            AccountId = "A019",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3721),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/6b/c9/c4/6bc9c4075b37202e3bdaa445e0337b13.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI42",
                            AccountId = "A019",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3727),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/14/a7/87/14a7874490c3b61fab4651ae5ff4112f.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI43",
                            AccountId = "A019",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3729),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/20/54/f4/2054f48bdc17b91f279938674cbd33ad.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI44",
                            AccountId = "A019",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3731),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/60/9c/43/609c434fb92fa95266c7be06fe96efbc.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI45",
                            AccountId = "A020",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3733),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/b8/27/d8/b827d8c8a295985347865df94088c597.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI46",
                            AccountId = "A020",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3736),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/7b/34/c1/7b34c1cd28ce80067fa749c5009ac7c7.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI47",
                            AccountId = "A020",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3738),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/95/88/d1/9588d11d286959114820ba9db75495dd.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI48",
                            AccountId = "A020",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3740),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/6e/2d/24/6e2d2433a754c2c40da9b43a8f8ddeb5.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI49",
                            AccountId = "A021",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3742),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/5e/42/2d/5e422d974040651b04ed142b92b458dc.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI50",
                            AccountId = "A021",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3746),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/38/9f/7b/389f7b75e44c3ac7b6a88822fc750a07.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI51",
                            AccountId = "A021",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3747),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/20/47/c7/2047c724f925d1245fa8fe16d2358e34.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI52",
                            AccountId = "A021",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3749),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/81/99/9a/81999a3e8311019965629487ead07a76.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI53",
                            AccountId = "A022",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3751),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/cd/87/ed/cd87ed57b54707beda273ab7859e0aa2.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI54",
                            AccountId = "A022",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3753),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/9a/38/21/9a3821d24193b383790a027b4010a90e.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI55",
                            AccountId = "A022",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3756),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/e8/29/e0/e829e0a56266a7ad2e1cb246d3ae8485.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI56",
                            AccountId = "A022",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3758),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/62/b2/41/62b241944f967787d4f42e1bb8f39150.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI57",
                            AccountId = "A023",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3760),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/06/fc/aa/06fcaa6e24a14618e2b311626f0e1731.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI58",
                            AccountId = "A023",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3765),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/c9/1b/40/c91b40ea5039f9ba77c6818c562c5e03.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI59",
                            AccountId = "A023",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3767),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/12/bc/af/12bcaf16db2536b5efcd0151e4b3961f.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI60",
                            AccountId = "A023",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3769),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/da/0e/62/da0e62808a44ae34ea64fbed4d53d985.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI61",
                            AccountId = "A024",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3771),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/62/28/d6/6228d67af0d1ec8fb29c6c2a4caab140.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI62",
                            AccountId = "A024",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3773),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/16/f2/ed/16f2ed550316d9b9e6b711bf5db48199.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI63",
                            AccountId = "A024",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3775),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/24/0c/a6/240ca6f928fd4a14f5d374587a79ca15.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI64",
                            AccountId = "A024",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3777),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/08/5b/6f/085b6fea8dec2b94ae9f61b7371bd673.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI65",
                            AccountId = "A026",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3779),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/29/27/31/29273169c4efa0a8e6046a12f2da2acc.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI66",
                            AccountId = "A026",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3782),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/ac/88/35/ac88358182a19358f733c55167609eca.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI67",
                            AccountId = "A026",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3784),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/77/62/ab/7762abfda62f20753c0178876c1d2502.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI68",
                            AccountId = "A026",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3786),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/04/12/23/041223a462f501f104f50ff14db702f6.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI69",
                            AccountId = "A027",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3788),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/1f/ab/c6/1fabc6a5b521f216a23f342e4a0d6693.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI70",
                            AccountId = "A027",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3790),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/16/8b/93/168b93c1d23074062772105e918cc6fb.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI71",
                            AccountId = "A027",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3792),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/5d/b4/0f/5db40fd8b35c811b26766a82b7bdc3fe.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI72",
                            AccountId = "A027",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3794),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/db/7c/11/db7c11ca40d3a7a298b5883f59212e6f.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI73",
                            AccountId = "A030",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3796),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/4c/4d/f1/4c4df13ca300caf1b6b44e04d7bc850b.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI74",
                            AccountId = "A030",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3799),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/01/3b/f2/013bf2519246b18ad649a2b46fb555fb.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI75",
                            AccountId = "A030",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3802),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/92/c0/94/92c094471ff7fd4f62c5ffb60ecbb631.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI76",
                            AccountId = "A030",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3804),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/8b/5f/c4/8b5fc4a0731c8f1b2e0a260990f4a652.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI77",
                            AccountId = "A031",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3806),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/fa/11/d0/fa11d0ff1344020f8836c36a65750588.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI78",
                            AccountId = "A031",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3808),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/32/2e/c3/322ec31c264453cb1cefe341c33bab47.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI79",
                            AccountId = "A031",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3810),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/a9/76/07/a97607d31abf66ac67fe1e98cca5b1d5.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI80",
                            AccountId = "A031",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3813),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/b0/45/2d/b0452d15257ce22d4c714cb3256f5223.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI81",
                            AccountId = "A032",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3815),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/b9/ba/fd/b9bafd46360e4fe812a98b64959eacaf.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI82",
                            AccountId = "A032",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3818),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/b8/e6/76/b8e67682a4b3d90285c1c703b1ab09eb.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI83",
                            AccountId = "A032",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3820),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/b3/74/c4/b374c47dd21214efb855a4f4549c41c4.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI84",
                            AccountId = "A032",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3849),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/5b/7c/54/5b7c54189d8ce4d3bf9b2cc01eeef1fc.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI85",
                            AccountId = "A033",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3851),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/34/18/22/34182254b22d2132d36b4d78a6b263e5.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI86",
                            AccountId = "A033",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3853),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/d2/37/86/d237864b3e34810b5433b9526ae4ad0b.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI87",
                            AccountId = "A033",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3855),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/54/cd/6c/54cd6c312e0dc5066d2c9fbdf6f43868.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI88",
                            AccountId = "A033",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3857),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/63/71/9c/63719c13e8f733cdd977a4b53aaba0b3.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI89",
                            AccountId = "A034",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3859),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/eb/a4/99/eba4995776296a9e7976cfd8910fe89d.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI90",
                            AccountId = "A034",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3863),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/56/07/bf/5607bf1c6dccf0b3ebc2c4c6d7a52acf.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI91",
                            AccountId = "A034",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3865),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/2e/e6/50/2ee650a3044c4874fdc1179c25f4fa6c.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI92",
                            AccountId = "A034",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3867),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/9f/86/9a/9f869a68e316f2ee6e38fe0f0e8526d4.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI93",
                            AccountId = "A035",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3869),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/c0/95/f2/c095f2e3430c2558ad3c8df49c97637b.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI94",
                            AccountId = "A035",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3871),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/c6/43/a4/c643a40e94d0a38453ea5de5fd25258d.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI95",
                            AccountId = "A035",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3873),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/84/d2/49/84d249395f122117ecebd58329c4f6fa.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI96",
                            AccountId = "A035",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3876),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/3b/e4/2f/3be42fafce1256eb99727fcb3b6ef6c9.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI97",
                            AccountId = "A036",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3881),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/9b/00/c0/9b00c0393fa9b8b34fc0646984c0cd28.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI98",
                            AccountId = "A036",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3884),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/c4/ef/c4/c4efc41aa1272888f3900a4e84c11050.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI99",
                            AccountId = "A036",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3886),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/2e/aa/04/2eaa0421302548f3844c2cb37f0c8d26.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI100",
                            AccountId = "A036",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3888),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/af/be/4f/afbe4f62dff502301f9548ac69878f58.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI101",
                            AccountId = "A037",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3890),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/74/2b/1e/742b1ee0648e30cf46515a001b69e950.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI102",
                            AccountId = "A037",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3892),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/43/25/52/432552136be3eec79b86c1612918718d.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI103",
                            AccountId = "A037",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3894),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/66/da/19/66da19604347b4eb703df694703dbafe.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI104",
                            AccountId = "A037",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3895),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/09/85/bd/0985bdb9abb1ba2006ea5bbaa0156216.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI105",
                            AccountId = "A038",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3897),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/32/af/33/32af3330425fb3506f3dc3b26f42977d.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI106",
                            AccountId = "A038",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3901),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/51/f6/0f/51f60f776fd573c1a5c0e0c40dea6ce4.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI107",
                            AccountId = "A038",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3903),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/bc/01/96/bc019677d32019f157b65a1b52cf8525.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI108",
                            AccountId = "A038",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3905),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/21/ab/2e/21ab2ea44c87f1ccb5a045fbc108fd5b.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI109",
                            AccountId = "A039",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3908),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/ea/0d/7d/ea0d7d7bea568bb90db6249962a47e44.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI110",
                            AccountId = "A039",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3910),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/83/ee/3f/83ee3fabf7711cf45ffe138f56e721cb.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI111",
                            AccountId = "A039",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3912),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/7d/e4/20/7de420bbb605367225dcf49c8bc1dfc5.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI112",
                            AccountId = "A039",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3914),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/cd/1e/69/cd1e695a7a4975899d35355af795a1b4.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI113",
                            AccountId = "A040",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3916),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/96/5f/0d/965f0d17bb49f04319ff92d8386f376b.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI114",
                            AccountId = "A040",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3920),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/44/87/2d/44872d8ee209e36937d28ce37d9185b2.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI115",
                            AccountId = "A040",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3922),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/2c/a9/7f/2ca97f876142eb705b5e7b4f2575921f.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI116",
                            AccountId = "A040",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3923),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/28/3a/6f/283a6fe7b75a8fac14f39e455c5ddf3e.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI117",
                            AccountId = "A013",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3925),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/61/d6/b1/61d6b1e5b709639b723bb5089152d6d3.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI118",
                            AccountId = "A013",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3927),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/50/ae/27/50ae27b2034b85d2a7bf4d034d5e572a.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI119",
                            AccountId = "A013",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3930),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/39/16/78/391678508450a4ee33776c39fdf2c1ef.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI120",
                            AccountId = "A013",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3932),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/69/15/b9/6915b9ffa19b89e6f1543e05b5b26f70.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI121",
                            AccountId = "A028",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3934),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/14/ca/61/14ca61522c3d813c3ea62c4710828ce2.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI122",
                            AccountId = "A028",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3937),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/4e/97/cc/4e97ccc8f6959a693ac2ad75c13604c7.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI123",
                            AccountId = "A028",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3941),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/474x/d0/47/cb/d047cbd5b9af39284b7196b273d133a3.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI124",
                            AccountId = "A028",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3943),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/dc/61/5d/dc615d9f585f76243510fb7e8c7af1d8.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI125",
                            AccountId = "A029",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3945),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/16/d8/88/16d8888fe52fedf56766a7511c42be69.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI126",
                            AccountId = "A029",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3947),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/e0/e1/0a/e0e10ace79a99cc678fe9aedfbfdfa83.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI127",
                            AccountId = "A029",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3949),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/3e/6c/cd/3e6ccdb41eed4ac91ac04b39a4b15694.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI128",
                            AccountId = "A029",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3968),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/eb/58/42/eb58427dffb8c0c20637df1713a583a8.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI129",
                            AccountId = "A025",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3972),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/cd/ab/48/cdab4817b7b49287dc3a9531ac99dfae.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI130",
                            AccountId = "A025",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3975),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/30/34/ea/3034ea8302054e693520957c194decae.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI131",
                            AccountId = "A025",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3977),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/f4/4b/de/f44bdec05cf7826b67c2030613374ecb.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI132",
                            AccountId = "A025",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3979),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/fa/c1/ef/fac1efe39388d64003b1ec4c7d2d05e8.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI133",
                            AccountId = "A015",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3981),
                            IsAvatar = true,
                            UrlImage = "https://i.pinimg.com/736x/94/c2/69/94c269ee90d0d8a5584a7a48207f50ca.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI134",
                            AccountId = "A015",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3983),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/2d/96/29/2d96299467843d2876516493ade1eea3.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI135",
                            AccountId = "A015",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3985),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/e4/df/f6/e4dff6f0e30260a73019f5d1a44cd8ec.jpg"
                        },
                        new
                        {
                            AccountImageId = "AI136",
                            AccountId = "A015",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(3988),
                            IsAvatar = false,
                            UrlImage = "https://i.pinimg.com/736x/9e/4f/2a/9e4f2ab84f5d8e3c4e36ad2c5c3962e2.jpg"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Activity", b =>
                {
                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ActivityId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            ActivityId = "ACT001",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6149),
                            Description = "A relaxing yoga session",
                            Name = "Yoga Class",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6149)
                        },
                        new
                        {
                            ActivityId = "ACT002",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6153),
                            Description = "Learn to cook delicious meals",
                            Name = "Cooking Workshop",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6154)
                        },
                        new
                        {
                            ActivityId = "ACT003",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6156),
                            Description = "Live music performance",
                            Name = "Music Concert",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6157)
                        },
                        new
                        {
                            ActivityId = "ACT004",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6159),
                            Description = "Showcase of local artists",
                            Name = "Art Exhibition",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6159)
                        },
                        new
                        {
                            ActivityId = "ACT005",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6161),
                            Description = "Discussion on latest technology trends",
                            Name = "Tech Talk",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6162)
                        },
                        new
                        {
                            ActivityId = "ACT006",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6163),
                            Description = "5K run for a good cause",
                            Name = "Charity Run",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6164)
                        },
                        new
                        {
                            ActivityId = "ACT007",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6166),
                            Description = "Monthly book discussion",
                            Name = "Book Club",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6166)
                        },
                        new
                        {
                            ActivityId = "ACT008",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6168),
                            Description = "Learn photography skills",
                            Name = "Photography Workshop",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6169)
                        },
                        new
                        {
                            ActivityId = "ACT009",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6171),
                            Description = "Dance battle for all ages",
                            Name = "Dance Competition",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6171)
                        },
                        new
                        {
                            ActivityId = "ACT010",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6175),
                            Description = "Competitive chess matches",
                            Name = "Chess Tournament",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6175)
                        },
                        new
                        {
                            ActivityId = "ACT011",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6177),
                            Description = "Outdoor movie screening",
                            Name = "Movie Night",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6177)
                        },
                        new
                        {
                            ActivityId = "ACT012",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6179),
                            Description = "Showcase of scientific projects",
                            Name = "Science Fair",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6179)
                        },
                        new
                        {
                            ActivityId = "ACT013",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6181),
                            Description = "Intensive coding workshop",
                            Name = "Coding Bootcamp",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6182)
                        },
                        new
                        {
                            ActivityId = "ACT014",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6183),
                            Description = "Learn gardening techniques",
                            Name = "Gardening Workshop",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6184)
                        },
                        new
                        {
                            ActivityId = "ACT015",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6186),
                            Description = "Guided meditation practice",
                            Name = "Meditation Session",
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6186)
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Cart", b =>
                {
                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CartId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            CartId = "C001",
                            AccountId = "A003",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5403),
                            TotalPrice = 0.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5403)
                        },
                        new
                        {
                            CartId = "C002",
                            AccountId = "A006",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5405),
                            TotalPrice = 0.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5406)
                        },
                        new
                        {
                            CartId = "C003",
                            AccountId = "A011",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5408),
                            TotalPrice = 0.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5408)
                        },
                        new
                        {
                            CartId = "C004",
                            AccountId = "A014",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5410),
                            TotalPrice = 0.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5411)
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CartProduct", b =>
                {
                    b.Property<string>("CartProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartProductId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartProduct");

                    b.HasData(
                        new
                        {
                            CartProductId = "e0a38791-1708-4b84-99c8-862eba64953c",
                            CartId = "C001",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6221),
                            Price = 30000.0,
                            ProductId = "P001",
                            Quantity = 2
                        },
                        new
                        {
                            CartProductId = "b0305f70-6079-48d0-bb00-a8e372103eb9",
                            CartId = "C001",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6227),
                            Price = 20000.0,
                            ProductId = "P002",
                            Quantity = 1
                        },
                        new
                        {
                            CartProductId = "737b7ec7-0a30-4689-a5c4-f88163fc8486",
                            CartId = "C001",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6274),
                            Price = 80000.0,
                            ProductId = "P003",
                            Quantity = 1
                        },
                        new
                        {
                            CartProductId = "e503a2b7-c7fe-4f45-b718-7bdbc7ccc30f",
                            CartId = "C002",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6278),
                            Price = 100000.0,
                            ProductId = "P004",
                            Quantity = 1
                        },
                        new
                        {
                            CartProductId = "8f5c697b-1962-40eb-8e9c-37a731727431",
                            CartId = "C002",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6281),
                            Price = 25000.0,
                            ProductId = "P005",
                            Quantity = 3
                        },
                        new
                        {
                            CartProductId = "bc194d20-e7ef-4714-8d2d-49ba85803728",
                            CartId = "C002",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6285),
                            Price = 40000.0,
                            ProductId = "P006",
                            Quantity = 2
                        },
                        new
                        {
                            CartProductId = "6d2730ba-44bc-48c4-b56a-abf6ecc2f890",
                            CartId = "C003",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6289),
                            Price = 15000.0,
                            ProductId = "P007",
                            Quantity = 5
                        },
                        new
                        {
                            CartProductId = "9343e3f6-fb22-4fa0-aec4-fd626b11f694",
                            CartId = "C003",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6293),
                            Price = 50000.0,
                            ProductId = "P008",
                            Quantity = 2
                        },
                        new
                        {
                            CartProductId = "6b4f70bc-776e-4a6d-a7c4-1e24a7e8b4c0",
                            CartId = "C003",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6296),
                            Price = 60000.0,
                            ProductId = "P009",
                            Quantity = 1
                        },
                        new
                        {
                            CartProductId = "d56ea989-9c2b-4aac-b073-808b210d9b6c",
                            CartId = "C004",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6300),
                            Price = 120000.0,
                            ProductId = "P010",
                            Quantity = 1
                        },
                        new
                        {
                            CartProductId = "b26c1b6d-4617-4683-93e4-c2ab4caadc2b",
                            CartId = "C004",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6303),
                            Price = 35000.0,
                            ProductId = "P011",
                            Quantity = 2
                        },
                        new
                        {
                            CartProductId = "979ad040-55ff-40ac-b06e-def800e7bc83",
                            CartId = "C004",
                            CreatedDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6305),
                            Price = 45000.0,
                            ProductId = "P012",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = "C3",
                            CategoryName = "Manga",
                            Description = "Manga characters"
                        },
                        new
                        {
                            CategoryId = "C4",
                            CategoryName = "Movie",
                            Description = "Movie characters"
                        },
                        new
                        {
                            CategoryId = "C5",
                            CategoryName = "Comic",
                            Description = "Comic book characters"
                        },
                        new
                        {
                            CategoryId = "C6",
                            CategoryName = "Mythology",
                            Description = "Mythological characters"
                        },
                        new
                        {
                            CategoryId = "C7",
                            CategoryName = "Fantasy",
                            Description = "Fantasy world characters"
                        },
                        new
                        {
                            CategoryId = "C8",
                            CategoryName = "Sci-Fi",
                            Description = "Science fiction characters"
                        },
                        new
                        {
                            CategoryId = "C9",
                            CategoryName = "Superhero",
                            Description = "Superhero characters"
                        },
                        new
                        {
                            CategoryId = "C10",
                            CategoryName = "Villains",
                            Description = "Famous villain characters"
                        },
                        new
                        {
                            CategoryId = "C11",
                            CategoryName = "Robot",
                            Description = "AI and robot characters"
                        },
                        new
                        {
                            CategoryId = "C12",
                            CategoryName = "Historical",
                            Description = "Historical figures in fiction"
                        },
                        new
                        {
                            CategoryId = "C13",
                            CategoryName = "Horror",
                            Description = "Horror and thriller characters"
                        },
                        new
                        {
                            CategoryId = "C14",
                            CategoryName = "Detective",
                            Description = "Famous detective characters"
                        },
                        new
                        {
                            CategoryId = "C15",
                            CategoryName = "Sports",
                            Description = "Characters from sports anime/manga"
                        },
                        new
                        {
                            CategoryId = "C16",
                            CategoryName = "Magic",
                            Description = "Characters using magic or spells"
                        },
                        new
                        {
                            CategoryId = "C17",
                            CategoryName = "Slice of Life",
                            Description = "Everyday life characters"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Character", b =>
                {
                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<float?>("MaxHeight")
                        .HasColumnType("real");

                    b.Property<float?>("MaxWeight")
                        .HasColumnType("real");

                    b.Property<float?>("MinHeight")
                        .HasColumnType("real");

                    b.Property<float?>("MinWeight")
                        .HasColumnType("real");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CharacterId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            CharacterId = "CH001",
                            CategoryId = "C3",
                            CharacterName = "Naruto",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4197),
                            Description = "Ninja from Konoha",
                            IsActive = true,
                            MaxHeight = 180f,
                            MaxWeight = 80f,
                            MinHeight = 160f,
                            MinWeight = 50f,
                            Price = 100000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH002",
                            CategoryId = "C3",
                            CharacterName = "Sasuke",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4202),
                            Description = "Naruto’s rival",
                            IsActive = true,
                            MaxHeight = 185f,
                            MaxWeight = 85f,
                            MinHeight = 165f,
                            MinWeight = 55f,
                            Price = 120000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH003",
                            CategoryId = "C3",
                            CharacterName = "Goku",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4207),
                            Description = "Saiyan warrior",
                            IsActive = true,
                            MaxHeight = 190f,
                            MaxWeight = 90f,
                            MinHeight = 170f,
                            MinWeight = 60f,
                            Price = 150000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH004",
                            CategoryId = "C4",
                            CharacterName = "Luffy",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4212),
                            Description = "Pirate King",
                            IsActive = true,
                            MaxHeight = 175f,
                            MaxWeight = 70f,
                            MinHeight = 155f,
                            MinWeight = 45f,
                            Price = 110000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH005",
                            CategoryId = "C4",
                            CharacterName = "Ichigo",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4216),
                            Description = "Soul Reaper",
                            IsActive = true,
                            MaxHeight = 185f,
                            MaxWeight = 85f,
                            MinHeight = 165f,
                            MinWeight = 55f,
                            Price = 130000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH006",
                            CategoryId = "C14",
                            CharacterName = "Mario",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4300),
                            Description = "Plumber hero",
                            IsActive = true,
                            MaxHeight = 180f,
                            MaxWeight = 80f,
                            MinHeight = 160f,
                            MinWeight = 60f,
                            Price = 80000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH007",
                            CategoryId = "C14",
                            CharacterName = "Luigi",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4304),
                            Description = "Mario’s brother",
                            IsActive = true,
                            MaxHeight = 170f,
                            MaxWeight = 75f,
                            MinHeight = 150f,
                            MinWeight = 55f,
                            Price = 85000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH008",
                            CategoryId = "C14",
                            CharacterName = "Link",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4307),
                            Description = "Hero of Hyrule",
                            IsActive = true,
                            MaxHeight = 180f,
                            MaxWeight = 80f,
                            MinHeight = 160f,
                            MinWeight = 50f,
                            Price = 140000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH009",
                            CategoryId = "C16",
                            CharacterName = "Zelda",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4312),
                            Description = "Hyrule princess",
                            IsActive = true,
                            MaxHeight = 175f,
                            MaxWeight = 70f,
                            MinHeight = 155f,
                            MinWeight = 50f,
                            Price = 135000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH010",
                            CategoryId = "C16",
                            CharacterName = "Samus",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4316),
                            Description = "Bounty hunter",
                            IsActive = true,
                            MaxHeight = 185f,
                            MaxWeight = 85f,
                            MinHeight = 165f,
                            MinWeight = 55f,
                            Price = 145000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH011",
                            CategoryId = "C13",
                            CharacterName = "Cloud",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4321),
                            Description = "Ex-SOLDIER",
                            IsActive = true,
                            MaxHeight = 185f,
                            MaxWeight = 85f,
                            MinHeight = 165f,
                            MinWeight = 55f,
                            Price = 125000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH012",
                            CategoryId = "C13",
                            CharacterName = "Sephiroth",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4325),
                            Description = "One-Winged Angel",
                            IsActive = true,
                            MaxHeight = 190f,
                            MaxWeight = 90f,
                            MinHeight = 170f,
                            MinWeight = 60f,
                            Price = 155000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH013",
                            CategoryId = "C8",
                            CharacterName = "Kratos",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4328),
                            Description = "God of War",
                            IsActive = true,
                            MaxHeight = 195f,
                            MaxWeight = 100f,
                            MinHeight = 175f,
                            MinWeight = 70f,
                            Price = 160000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH014",
                            CategoryId = "C8",
                            CharacterName = "Pikachu",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4332),
                            Description = "Electric Pokemon",
                            IsActive = true,
                            MaxHeight = 180f,
                            MaxWeight = 80f,
                            MinHeight = 160f,
                            MinWeight = 60f,
                            Price = 90000.0,
                            Quantity = 100
                        },
                        new
                        {
                            CharacterId = "CH015",
                            CategoryId = "C8",
                            CharacterName = "Kirby",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4335),
                            Description = "Pink puffball",
                            IsActive = true,
                            MaxHeight = 180f,
                            MaxWeight = 80f,
                            MinHeight = 160f,
                            MinWeight = 60f,
                            Price = 95000.0,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CharacterImage", b =>
                {
                    b.Property<string>("CharacterImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAvatar")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterImageId");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterImage");

                    b.HasData(
                        new
                        {
                            CharacterImageId = "CI001",
                            CharacterId = "CH001",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6412),
                            UrlImage = "https://ae01.alicdn.com/kf/HTB1gQt5aO6guuRkSnb4q6zu4XXaw/Naruto-Cosplay-Costumes-Anime-Naruto-Outfit-For-Man-Show-Suits-Japanese-Cartoon-Costumes-Naruto-Coat-Top.jpg"
                        },
                        new
                        {
                            CharacterImageId = "CI002",
                            CharacterId = "CH002",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6416),
                            UrlImage = "https://lzd-img-global.slatic.net/g/ff/kf/Sfedbbf9e61af4bc5a4ce107829ab12ffP.jpg_720x720q80.jpg"
                        },
                        new
                        {
                            CharacterImageId = "CI003",
                            CharacterId = "CH003",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6420),
                            UrlImage = "https://tse2.mm.bing.net/th/id/OIP.7wO0lin122XZz8cW6QwMPwHaNK?rs=1&pid=ImgDetMain"
                        },
                        new
                        {
                            CharacterImageId = "CI004",
                            CharacterId = "CH004",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6421),
                            UrlImage = "https://th.bing.com/th/id/R.a547136c5dc32ca575032d919b616c81?rik=QB63jSYlpxVIDg&pid=ImgRaw&r=0"
                        },
                        new
                        {
                            CharacterImageId = "CI005",
                            CharacterId = "CH005",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6423),
                            UrlImage = "https://tse3.mm.bing.net/th/id/OIP.Iv-VMJCvgXjXP3seS54VUQHaIj?rs=1&pid=ImgDetMain"
                        },
                        new
                        {
                            CharacterImageId = "CI006",
                            CharacterId = "CH006",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6425),
                            UrlImage = "https://i.pinimg.com/736x/88/67/c2/8867c200a089728d7e5fc0893c4b768d.jpg"
                        },
                        new
                        {
                            CharacterImageId = "CI007",
                            CharacterId = "CH007",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6427),
                            UrlImage = "https://tse1.explicit.bing.net/th/id/OIP.v9qz5NCIL7XhgBUU1rnkLQHaKL?rs=1&pid=ImgDetMain"
                        },
                        new
                        {
                            CharacterImageId = "CI008",
                            CharacterId = "CH008",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6428),
                            UrlImage = "https://cdn.openart.ai/stable_diffusion/43d1f34dddfdcdfefa54b8984be0a96159b200a8_2000x2000.webp"
                        },
                        new
                        {
                            CharacterImageId = "CI009",
                            CharacterId = "CH009",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6430),
                            UrlImage = "https://tse1.mm.bing.net/th/id/OIP.dX8f8uziv7-sVE-MGmiKMwHaHa?rs=1&pid=ImgDetMain"
                        },
                        new
                        {
                            CharacterImageId = "CI010",
                            CharacterId = "CH010",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6432),
                            UrlImage = "https://tse3.mm.bing.net/th/id/OIP.GLTrvuL5642aAYTOFxC0eAHaJQ?rs=1&pid=ImgDetMain"
                        },
                        new
                        {
                            CharacterImageId = "CI011",
                            CharacterId = "CH011",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6435),
                            UrlImage = "https://th.bing.com/th/id/R.1a1aeceee8146ba95dd2a8f69c3f182f?rik=T9YeKcs%2b27tcsg&pid=ImgRaw&r=0"
                        },
                        new
                        {
                            CharacterImageId = "CI012",
                            CharacterId = "CH012",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6437),
                            UrlImage = "https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/7b60d23e-2e8e-44da-a221-dc39a83c4f3f/der5hqx-ee11482f-b214-4b25-bfee-88dc11a8c4fe.jpg/v1/fill/w_1280,h_1814,q_75,strp/sephiroth__full_body__by_akonyah_der5hqx-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzdiNjBkMjNlLTJlOGUtNDRkYS1hMjIxLWRjMzlhODNjNGYzZlwvZGVyNWhxeC1lZTExNDgyZi1iMjE0LTRiMjUtYmZlZS04OGRjMTFhOGM0ZmUuanBnIiwiaGVpZ2h0IjoiPD0xODE0Iiwid2lkdGgiOiI8PTEyODAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uud2F0ZXJtYXJrIl0sIndtayI6eyJwYXRoIjoiXC93bVwvN2I2MGQyM2UtMmU4ZS00NGRhLWEyMjEtZGMzOWE4M2M0ZjNmXC9ha29ueWFoLTQucG5nIiwib3BhY2l0eSI6OTUsInByb3BvcnRpb25zIjowLjQ1LCJncmF2aXR5IjoiY2VudGVyIn19.e9IstlpQcF1QRaMoUKkr41MQ7pekjWh_iOje74x3coY"
                        },
                        new
                        {
                            CharacterImageId = "CI013",
                            CharacterId = "CH013",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6438),
                            UrlImage = "https://tse1.mm.bing.net/th/id/OIP.uCp4Whd_B4z4Zw8C7wvjxwHaLH?rs=1&pid=ImgDetMain"
                        },
                        new
                        {
                            CharacterImageId = "CI014",
                            CharacterId = "CH014",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6440),
                            UrlImage = "https://tse3.mm.bing.net/th/id/OIP.3ADDr3lt8PYxM6KP10OtwwAAAA?rs=1&pid=ImgDetMain"
                        },
                        new
                        {
                            CharacterImageId = "CI015",
                            CharacterId = "CH015",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6442),
                            UrlImage = "https://thatparkplace.com/wp-content/uploads/2023/04/kirby-e1681312791814.jpg"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Contract", b =>
                {
                    b.Property<string>("ContractId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ContractName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContractStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryStatus")
                        .HasColumnType("int");

                    b.Property<string>("Deposit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UrlPdf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractId");

                    b.HasIndex("RequestId")
                        .IsUnique()
                        .HasFilter("[RequestId] IS NOT NULL");

                    b.ToTable("Contract");

                    b.HasData(
                        new
                        {
                            ContractId = "CT002",
                            Amount = 0.0,
                            ContractName = "Character rental",
                            ContractStatus = 1,
                            CreateBy = "A002",
                            CreateDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deposit = "100",
                            RequestId = "R002",
                            TotalPrice = 500000.0
                        },
                        new
                        {
                            ContractId = "CT005",
                            Amount = 350000.0,
                            ContractName = "Character rental",
                            ContractStatus = 1,
                            CreateBy = "A005",
                            CreateDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deposit = "50",
                            RequestId = "R005",
                            TotalPrice = 700000.0
                        },
                        new
                        {
                            ContractId = "CT008",
                            Amount = 175000.0,
                            ContractName = "Character rental",
                            ContractStatus = 1,
                            CreateBy = "A008",
                            CreateDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deposit = "50",
                            RequestId = "R008",
                            TotalPrice = 350000.0
                        },
                        new
                        {
                            ContractId = "CT010",
                            Amount = 100000.0,
                            ContractName = "Character rental",
                            ContractStatus = 2,
                            CreateBy = "A010",
                            CreateDate = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryStatus = 1,
                            Deposit = "50",
                            RequestId = "R010",
                            TotalPrice = 200000.0
                        },
                        new
                        {
                            ContractId = "CT014",
                            Amount = 0.0,
                            ContractName = "Character rental",
                            ContractStatus = 1,
                            CreateBy = "A014",
                            CreateDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deposit = "100",
                            RequestId = "R014",
                            TotalPrice = 600000.0
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ContractCharacter", b =>
                {
                    b.Property<string>("ContractCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CosplayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ContractCharacterId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractCharacter");

                    b.HasData(
                        new
                        {
                            ContractCharacterId = "CC0021",
                            CharacterId = "CH001",
                            ContractId = "CT002",
                            CreateDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 1 for CT002",
                            Quantity = 1,
                            TotalPrice = 150000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0022",
                            CharacterId = "CH002",
                            ContractId = "CT002",
                            CreateDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 2 for CT002",
                            Quantity = 5,
                            TotalPrice = 180000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0023",
                            CharacterId = "CH003",
                            ContractId = "CT002",
                            CreateDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 3 for CT002",
                            Quantity = 3,
                            TotalPrice = 170000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0051",
                            CharacterId = "CH004",
                            ContractId = "CT005",
                            CreateDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 1 for CT005",
                            Quantity = 2,
                            TotalPrice = 200000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0052",
                            CharacterId = "CH005",
                            ContractId = "CT005",
                            CreateDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 2 for CT005",
                            Quantity = 4,
                            TotalPrice = 250000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0053",
                            CharacterId = "CH006",
                            ContractId = "CT005",
                            CreateDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 3 for CT005",
                            Quantity = 6,
                            TotalPrice = 250000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0081",
                            CharacterId = "CH007",
                            ContractId = "CT008",
                            CosplayerId = "A001",
                            CreateDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 1 for CT008",
                            Quantity = 1,
                            TotalPrice = 120000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0082",
                            CharacterId = "CH008",
                            ContractId = "CT008",
                            CosplayerId = "A008",
                            CreateDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 2 for CT008",
                            Quantity = 1,
                            TotalPrice = 130000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0083",
                            CharacterId = "CH009",
                            ContractId = "CT008",
                            CosplayerId = "A040",
                            CreateDate = new DateTime(2025, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 3 for CT008",
                            Quantity = 1,
                            TotalPrice = 100000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0101",
                            CharacterId = "CH010",
                            ContractId = "CT010",
                            CosplayerId = "A040",
                            CreateDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 1 for CT010",
                            Quantity = 1,
                            TotalPrice = 70000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0102",
                            CharacterId = "CH011",
                            ContractId = "CT010",
                            CosplayerId = "A039",
                            CreateDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 2 for CT010",
                            Quantity = 1,
                            TotalPrice = 80000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0103",
                            CharacterId = "CH012",
                            ContractId = "CT010",
                            CosplayerId = "A038",
                            CreateDate = new DateTime(2025, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 3 for CT010",
                            Quantity = 1,
                            TotalPrice = 50000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0141",
                            CharacterId = "CH013",
                            ContractId = "CT014",
                            CosplayerId = "A035",
                            CreateDate = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 1 for CT014",
                            Quantity = 1,
                            TotalPrice = 200000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0142",
                            CharacterId = "CH014",
                            ContractId = "CT014",
                            CosplayerId = "A040",
                            CreateDate = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 2 for CT014",
                            Quantity = 1,
                            TotalPrice = 250000.0
                        },
                        new
                        {
                            ContractCharacterId = "CC0143",
                            CharacterId = "CH015",
                            ContractId = "CT014",
                            CosplayerId = "A005",
                            CreateDate = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Character 3 for CT014",
                            Quantity = 1,
                            TotalPrice = 150000.0
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ContractImage", b =>
                {
                    b.Property<string>("ContractImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractImageId");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractImage");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ContractRefund", b =>
                {
                    b.Property<string>("ContractRefundId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountBankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ContractRefundId");

                    b.HasIndex("ContractId")
                        .IsUnique();

                    b.ToTable("ContractRefund");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Coupon", b =>
                {
                    b.Property<string>("CouponId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouponName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Percent")
                        .HasColumnType("real");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CouponId");

                    b.ToTable("Coupon");

                    b.HasData(
                        new
                        {
                            CouponId = "CP001",
                            Amount = 50000.0,
                            Condition = "Min order 500",
                            EndDate = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 10f,
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP002",
                            Amount = 150000.0,
                            Condition = "Min order 1000",
                            EndDate = new DateTime(2024, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 15f,
                            StartDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP003",
                            Amount = 400000.0,
                            Condition = "Min contract 2000",
                            EndDate = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 20f,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            CouponId = "CP004",
                            Amount = 180000.0,
                            Condition = "Min order 1500",
                            EndDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 12f,
                            StartDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP005",
                            Amount = 750000.0,
                            Condition = "Min contract 3000",
                            EndDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 25f,
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            CouponId = "CP006",
                            Amount = 100000.0,
                            Condition = "New customers only",
                            EndDate = new DateTime(2024, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 10f,
                            StartDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP007",
                            Amount = 200000.0,
                            Condition = "Holiday Special",
                            EndDate = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 20f,
                            StartDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP008",
                            Amount = 600000.0,
                            Condition = "VIP customers",
                            EndDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 30f,
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            CouponId = "CP009",
                            Amount = 120000.0,
                            Condition = "Summer Sale",
                            EndDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 15f,
                            StartDate = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP010",
                            Amount = 1000000.0,
                            Condition = "Black Friday",
                            EndDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 50f,
                            StartDate = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            CouponId = "CP011",
                            Amount = 75000.0,
                            Condition = "Back to School",
                            EndDate = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 10f,
                            StartDate = new DateTime(2024, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP012",
                            Amount = 1750000.0,
                            Condition = "Min contract 5000",
                            EndDate = new DateTime(2024, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 35f,
                            StartDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            CouponId = "CP013",
                            Amount = 250000.0,
                            Condition = "Loyal Customers",
                            EndDate = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 20f,
                            StartDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP014",
                            Amount = 800000.0,
                            Condition = "Cyber Monday",
                            EndDate = new DateTime(2024, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 40f,
                            StartDate = new DateTime(2024, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        },
                        new
                        {
                            CouponId = "CP015",
                            Amount = 50000.0,
                            Condition = "Referral Bonus",
                            EndDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Percent = 10f,
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = 1
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CustomerCharacter", b =>
                {
                    b.Property<string>("CustomerCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MaxHeight")
                        .HasColumnType("real");

                    b.Property<float?>("MaxWeight")
                        .HasColumnType("real");

                    b.Property<float?>("MinHeight")
                        .HasColumnType("real");

                    b.Property<float?>("MinWeight")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerCharacterId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CustomerCharacter");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CustomerCharacterImage", b =>
                {
                    b.Property<string>("CustomerCharacterImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerCharacterImageId");

                    b.HasIndex("CustomerCharacterId");

                    b.ToTable("CustomerCharacterImage");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Event", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            EventId = "E001",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4554),
                            Description = "A grand celebration to welcome the new year",
                            EndDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "New Year Festival",
                            IsActive = true,
                            Location = "Times Square, New York",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E002",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4558),
                            Description = "Experience the beauty of cherry blossoms",
                            EndDate = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Spring Blossom Fest",
                            IsActive = true,
                            Location = "Kyoto, Japan",
                            StartDate = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E003",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4561),
                            Description = "Showcasing the latest in technology and AI",
                            EndDate = new DateTime(2025, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Tech Innovation Summit",
                            IsActive = true,
                            Location = "Silicon Valley",
                            StartDate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E004",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4592),
                            Description = "Live performances from top artists",
                            EndDate = new DateTime(2025, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Music Fest",
                            IsActive = true,
                            Location = "Coachella, California",
                            StartDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E005",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4597),
                            Description = "A must-attend event for comic book fans",
                            EndDate = new DateTime(2025, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Comic-Con International",
                            IsActive = true,
                            Location = "San Diego Convention Center",
                            StartDate = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E006",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4600),
                            Description = "Largest anime convention in the world",
                            EndDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Anime Expo",
                            IsActive = true,
                            Location = "Los Angeles Convention Center",
                            StartDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E007",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4603),
                            Description = "Latest trends and releases in gaming",
                            EndDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Gaming Expo",
                            IsActive = true,
                            Location = "Las Vegas Convention Center",
                            StartDate = new DateTime(2025, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E008",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4606),
                            Description = "A fun-filled summer celebration",
                            EndDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Summer Festival",
                            IsActive = true,
                            Location = "Miami Beach, Florida",
                            StartDate = new DateTime(2025, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E009",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4609),
                            Description = "A paradise for cosplayers",
                            EndDate = new DateTime(2025, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Cosplay Festival",
                            IsActive = true,
                            Location = "Tokyo Big Sight",
                            StartDate = new DateTime(2025, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E010",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4613),
                            Description = "Showcasing the best movies of the year",
                            EndDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Film Festival",
                            IsActive = true,
                            Location = "Cannes, France",
                            StartDate = new DateTime(2025, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E011",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4615),
                            Description = "Spooky celebrations and costume parties",
                            EndDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Halloween Night",
                            IsActive = true,
                            Location = "Salem, Massachusetts",
                            StartDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EventId = "E012",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4618),
                            Description = "Festive shopping and holiday cheer",
                            EndDate = new DateTime(2025, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Christmas Market",
                            IsActive = true,
                            Location = "Nuremberg, Germany",
                            StartDate = new DateTime(2025, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.EventActivity", b =>
                {
                    b.Property<string>("EventActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventActivityId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EventId");

                    b.ToTable("EventActivity");

                    b.HasData(
                        new
                        {
                            EventActivityId = "EA001",
                            ActivityId = "ACT001",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5986),
                            Description = "Yoga for a fresh start",
                            EventId = "E001"
                        },
                        new
                        {
                            EventActivityId = "EA002",
                            ActivityId = "ACT005",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5989),
                            Description = "Tech trends in the new year",
                            EventId = "E001"
                        },
                        new
                        {
                            EventActivityId = "EA003",
                            ActivityId = "ACT004",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5991),
                            Description = "Painting cherry blossoms",
                            EventId = "E002"
                        },
                        new
                        {
                            EventActivityId = "EA004",
                            ActivityId = "ACT013",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5993),
                            Description = "AI and future coding",
                            EventId = "E003"
                        },
                        new
                        {
                            EventActivityId = "EA005",
                            ActivityId = "ACT009",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5995),
                            Description = "Dance battles live",
                            EventId = "E004"
                        },
                        new
                        {
                            EventActivityId = "EA006",
                            ActivityId = "ACT003",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5997),
                            Description = "Comic-Con live music",
                            EventId = "E005"
                        },
                        new
                        {
                            EventActivityId = "EA007",
                            ActivityId = "ACT007",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5999),
                            Description = "Anime and book discussions",
                            EventId = "E006"
                        },
                        new
                        {
                            EventActivityId = "EA008",
                            ActivityId = "ACT010",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6002),
                            Description = "Chess and gaming",
                            EventId = "E007"
                        },
                        new
                        {
                            EventActivityId = "EA009",
                            ActivityId = "ACT011",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6004),
                            Description = "Outdoor movie fun",
                            EventId = "E008"
                        },
                        new
                        {
                            EventActivityId = "EA010",
                            ActivityId = "ACT015",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6006),
                            Description = "Meditation for cosplayers",
                            EventId = "E009"
                        },
                        new
                        {
                            EventActivityId = "EA011",
                            ActivityId = "ACT012",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6008),
                            Description = "Science in filmmaking",
                            EventId = "E010"
                        },
                        new
                        {
                            EventActivityId = "EA012",
                            ActivityId = "ACT006",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6010),
                            Description = "Halloween charity run",
                            EventId = "E011"
                        },
                        new
                        {
                            EventActivityId = "EA013",
                            ActivityId = "ACT014",
                            CreateBy = "Admin",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6012),
                            Description = "Christmas gardening",
                            EventId = "E012"
                        },
                        new
                        {
                            EventActivityId = "EA014",
                            ActivityId = "ACT002",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6014),
                            Description = "Cooking for music lovers",
                            EventId = "E004"
                        },
                        new
                        {
                            EventActivityId = "EA015",
                            ActivityId = "ACT008",
                            CreateBy = "Manager",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6016),
                            Description = "Photography in tech",
                            EventId = "E003"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.EventCharacter", b =>
                {
                    b.Property<string>("EventCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsAssign")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventCharacterId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("EventId");

                    b.ToTable("EventCharacter");

                    b.HasData(
                        new
                        {
                            EventCharacterId = "EC001",
                            CharacterId = "CH001",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5925),
                            EventId = "E001",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC002",
                            CharacterId = "CH002",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5930),
                            EventId = "E002",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC003",
                            CharacterId = "CH003",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5932),
                            EventId = "E003",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC004",
                            CharacterId = "CH004",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5935),
                            EventId = "E004",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC005",
                            CharacterId = "CH005",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5938),
                            EventId = "E005",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC006",
                            CharacterId = "CH006",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5940),
                            EventId = "E006",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC007",
                            CharacterId = "CH007",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5942),
                            EventId = "E007",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC008",
                            CharacterId = "CH008",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5944),
                            EventId = "E008",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC009",
                            CharacterId = "CH009",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5946),
                            EventId = "E009",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC010",
                            CharacterId = "CH010",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5948),
                            EventId = "E010",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC011",
                            CharacterId = "CH011",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5950),
                            EventId = "E011",
                            IsAssign = true
                        },
                        new
                        {
                            EventCharacterId = "EC012",
                            CharacterId = "CH012",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5954),
                            EventId = "E012",
                            IsAssign = true
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.EventImage", b =>
                {
                    b.Property<string>("ImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAvatar")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ImageId");

                    b.HasIndex("EventId");

                    b.ToTable("EventImage");

                    b.HasData(
                        new
                        {
                            ImageId = "EI001",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6472),
                            EventId = "E001",
                            ImageUrl = "https://example.com/event1.jpg"
                        },
                        new
                        {
                            ImageId = "EI002",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6475),
                            EventId = "E002",
                            ImageUrl = "https://example.com/event2.jpg"
                        },
                        new
                        {
                            ImageId = "EI003",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6477),
                            EventId = "E003",
                            ImageUrl = "https://example.com/event3.jpg"
                        },
                        new
                        {
                            ImageId = "EI004",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6480),
                            EventId = "E004",
                            ImageUrl = "https://example.com/event4.jpg"
                        },
                        new
                        {
                            ImageId = "EI005",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6482),
                            EventId = "E005",
                            ImageUrl = "https://example.com/event5.jpg"
                        },
                        new
                        {
                            ImageId = "EI006",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6483),
                            EventId = "E006",
                            ImageUrl = "https://example.com/event6.jpg"
                        },
                        new
                        {
                            ImageId = "EI007",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6485),
                            EventId = "E007",
                            ImageUrl = "https://example.com/event7.jpg"
                        },
                        new
                        {
                            ImageId = "EI008",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6548),
                            EventId = "E008",
                            ImageUrl = "https://example.com/event8.jpg"
                        },
                        new
                        {
                            ImageId = "EI009",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6550),
                            EventId = "E009",
                            ImageUrl = "https://example.com/event9.jpg"
                        },
                        new
                        {
                            ImageId = "EI010",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6551),
                            EventId = "E010",
                            ImageUrl = "https://example.com/event10.jpg"
                        },
                        new
                        {
                            ImageId = "EI011",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6553),
                            EventId = "E011",
                            ImageUrl = "https://example.com/event11.jpg"
                        },
                        new
                        {
                            ImageId = "EI012",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6556),
                            EventId = "E012",
                            ImageUrl = "https://example.com/event12.jpg"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Feedback", b =>
                {
                    b.Property<string>("FeedbackId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Star")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FeedbackId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ContractCharacterId")
                        .IsUnique()
                        .HasFilter("[ContractCharacterId] IS NOT NULL");

                    b.ToTable("Feedback");

                    b.HasData(
                        new
                        {
                            FeedbackId = "b12a1967-30ee-4e9c-a93e-7c45ba7fc5f8",
                            AccountId = "A001",
                            ContractCharacterId = "CC0021",
                            CreateBy = "A001",
                            CreateDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Great experience!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "0f57e9e8-b3e8-4a0b-ae62-59dacf19468e",
                            AccountId = "A004",
                            ContractCharacterId = "CC0022",
                            CreateBy = "A004",
                            CreateDate = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Loved the event!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "86de1d84-9b63-4045-b05c-b424067f1d9e",
                            AccountId = "A005",
                            ContractCharacterId = "CC0023",
                            CreateBy = "A005",
                            CreateDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nice cosplay session!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "2a075ed5-cd8e-4602-a08c-0dadb5122738",
                            AccountId = "A007",
                            ContractCharacterId = "CC0051",
                            CreateBy = "A007",
                            CreateDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enjoyed the event!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "20ef8d0a-ffa6-482a-9df5-51ce84b230e4",
                            AccountId = "A008",
                            ContractCharacterId = "CC0052",
                            CreateBy = "A008",
                            CreateDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Would love to join again!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "3a397474-91c9-4698-a0d2-2a346c09af01",
                            AccountId = "A010",
                            ContractCharacterId = "CC0053",
                            CreateBy = "A010",
                            CreateDate = new DateTime(2025, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The atmosphere was amazing!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "1e9b82c0-8038-485d-a11a-c55e1b86d208",
                            AccountId = "A012",
                            ContractCharacterId = "CC0081",
                            CreateBy = "A012",
                            CreateDate = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Best cosplay event!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "898c54de-4c9a-4b43-b679-cb0ee4793342",
                            AccountId = "A013",
                            ContractCharacterId = "CC0082",
                            CreateBy = "A013",
                            CreateDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nice crowd and management!",
                            Star = 5
                        },
                        new
                        {
                            FeedbackId = "4beafff8-3f01-447b-bc37-66951093f712",
                            AccountId = "A015",
                            ContractCharacterId = "CC0083",
                            CreateBy = "A015",
                            CreateDate = new DateTime(2025, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Amazing experience!",
                            Star = 5
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSentMail")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            Id = "N001",
                            AccountId = "A001",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5335),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Welcome to the system!"
                        },
                        new
                        {
                            Id = "N002",
                            AccountId = "A002",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5338),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Your account has been upgraded."
                        },
                        new
                        {
                            Id = "N003",
                            AccountId = "A003",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5340),
                            IsRead = true,
                            IsSentMail = true,
                            Message = "New promotional offer available!"
                        },
                        new
                        {
                            Id = "N004",
                            AccountId = "A004",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5342),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Your request has been approved."
                        },
                        new
                        {
                            Id = "N005",
                            AccountId = "A005",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5344),
                            IsRead = true,
                            IsSentMail = true,
                            Message = "System maintenance scheduled."
                        },
                        new
                        {
                            Id = "N006",
                            AccountId = "A006",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5346),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Your order has been shipped!"
                        },
                        new
                        {
                            Id = "N007",
                            AccountId = "A007",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5348),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "New event registration open."
                        },
                        new
                        {
                            Id = "N008",
                            AccountId = "A008",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5352),
                            IsRead = true,
                            IsSentMail = true,
                            Message = "Reminder: Payment due soon."
                        },
                        new
                        {
                            Id = "N009",
                            AccountId = "A009",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5354),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Your password was changed."
                        },
                        new
                        {
                            Id = "N010",
                            AccountId = "A010",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5356),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Admin announcement update."
                        },
                        new
                        {
                            Id = "N011",
                            AccountId = "A011",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5358),
                            IsRead = true,
                            IsSentMail = true,
                            Message = "New message from support."
                        },
                        new
                        {
                            Id = "N012",
                            AccountId = "A012",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5360),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Upcoming event invitation."
                        },
                        new
                        {
                            Id = "N013",
                            AccountId = "A013",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5362),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "New cosplayer contest."
                        },
                        new
                        {
                            Id = "N014",
                            AccountId = "A014",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5364),
                            IsRead = true,
                            IsSentMail = true,
                            Message = "Loyalty points updated."
                        },
                        new
                        {
                            Id = "N015",
                            AccountId = "A015",
                            CreatedAt = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(5366),
                            IsRead = false,
                            IsSentMail = true,
                            Message = "Your subscription expired."
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("to_district_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to_ward_code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("AccountId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = "O001",
                            AccountId = "A003",
                            Address = "123 Main St",
                            OrderDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0901234567",
                            ShipCode = "S001",
                            ShipStatus = "Shipped",
                            TotalPrice = 250000.0,
                            to_district_id = "District1",
                            to_ward_code = "Ward1"
                        },
                        new
                        {
                            OrderId = "O002",
                            AccountId = "A006",
                            Address = "456 Elm St",
                            OrderDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0902345678",
                            ShipCode = "S002",
                            ShipStatus = "Shipped",
                            TotalPrice = 150000.5,
                            to_district_id = "District2",
                            to_ward_code = "Ward2"
                        },
                        new
                        {
                            OrderId = "O003",
                            AccountId = "A011",
                            Address = "789 Pine St",
                            CancelDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2,
                            Phone = "0903456789",
                            ShipCode = "S003",
                            ShipStatus = "Canceled",
                            TotalPrice = 300000.0,
                            to_district_id = "District3",
                            to_ward_code = "Ward3"
                        },
                        new
                        {
                            OrderId = "O004",
                            AccountId = "A014",
                            Address = "101 Oak St",
                            OrderDate = new DateTime(2024, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0904567890",
                            ShipCode = "S004",
                            ShipStatus = "Shipped",
                            TotalPrice = 400000.0,
                            to_district_id = "District4",
                            to_ward_code = "Ward4"
                        },
                        new
                        {
                            OrderId = "O005",
                            AccountId = "A003",
                            Address = "123 Main St",
                            CancelDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2,
                            Phone = "0901234567",
                            ShipCode = "S005",
                            ShipStatus = "Canceled",
                            TotalPrice = 175000.0,
                            to_district_id = "District1",
                            to_ward_code = "Ward1"
                        },
                        new
                        {
                            OrderId = "O006",
                            AccountId = "A006",
                            Address = "456 Elm St",
                            OrderDate = new DateTime(2024, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0902345678",
                            ShipCode = "S006",
                            ShipStatus = "Shipped",
                            TotalPrice = 225000.0,
                            to_district_id = "District2",
                            to_ward_code = "Ward2"
                        },
                        new
                        {
                            OrderId = "O007",
                            AccountId = "A011",
                            Address = "789 Pine St",
                            OrderDate = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0903456789",
                            ShipCode = "S007",
                            ShipStatus = "Shipped",
                            TotalPrice = 350000.0,
                            to_district_id = "District3",
                            to_ward_code = "Ward3"
                        },
                        new
                        {
                            OrderId = "O008",
                            AccountId = "A014",
                            Address = "101 Oak St",
                            CancelDate = new DateTime(2024, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2024, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2,
                            Phone = "0904567890",
                            ShipCode = "S008",
                            ShipStatus = "Canceled",
                            TotalPrice = 275000.0,
                            to_district_id = "District4",
                            to_ward_code = "Ward4"
                        },
                        new
                        {
                            OrderId = "O009",
                            AccountId = "A003",
                            Address = "123 Main St",
                            OrderDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0901234567",
                            ShipCode = "S009",
                            ShipStatus = "Shipped",
                            TotalPrice = 500000.0,
                            to_district_id = "District1",
                            to_ward_code = "Ward1"
                        },
                        new
                        {
                            OrderId = "O010",
                            AccountId = "A006",
                            Address = "456 Elm St",
                            CancelDate = new DateTime(2024, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2024, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2,
                            Phone = "0902345678",
                            ShipCode = "S010",
                            ShipStatus = "Canceled",
                            TotalPrice = 125000.0,
                            to_district_id = "District2",
                            to_ward_code = "Ward2"
                        },
                        new
                        {
                            OrderId = "O011",
                            AccountId = "A011",
                            Address = "789 Pine St",
                            OrderDate = new DateTime(2024, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0903456789",
                            ShipCode = "S011",
                            ShipStatus = "Shipped",
                            TotalPrice = 325000.0,
                            to_district_id = "District3",
                            to_ward_code = "Ward3"
                        },
                        new
                        {
                            OrderId = "O012",
                            AccountId = "A014",
                            Address = "101 Oak St",
                            OrderDate = new DateTime(2024, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0904567890",
                            ShipCode = "S012",
                            ShipStatus = "Shipped",
                            TotalPrice = 410000.0,
                            to_district_id = "District4",
                            to_ward_code = "Ward4"
                        },
                        new
                        {
                            OrderId = "O013",
                            AccountId = "A003",
                            Address = "123 Main St",
                            CancelDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 2,
                            Phone = "0901234567",
                            ShipCode = "S013",
                            ShipStatus = "Canceled",
                            TotalPrice = 280000.0,
                            to_district_id = "District1",
                            to_ward_code = "Ward1"
                        },
                        new
                        {
                            OrderId = "O014",
                            AccountId = "A006",
                            Address = "456 Elm St",
                            OrderDate = new DateTime(2024, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0902345678",
                            ShipCode = "S014",
                            ShipStatus = "Shipped",
                            TotalPrice = 350000.0,
                            to_district_id = "District2",
                            to_ward_code = "Ward2"
                        },
                        new
                        {
                            OrderId = "O015",
                            AccountId = "A011",
                            Address = "789 Pine St",
                            OrderDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderStatus = 1,
                            Phone = "0903456789",
                            ShipCode = "S015",
                            ShipStatus = "Shipped",
                            TotalPrice = 200000.0,
                            to_district_id = "District3",
                            to_ward_code = "Ward3"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.OrderProduct", b =>
                {
                    b.Property<string>("OrderProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            OrderProductId = "9e460108-715f-4ab9-a2a8-bca1f4607bd0",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6592),
                            OrderId = "O001",
                            Price = 30000.0,
                            ProductId = "P001",
                            Quantity = 3
                        },
                        new
                        {
                            OrderProductId = "93575a5f-690e-4f27-8538-1998efdab4d6",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6595),
                            OrderId = "O001",
                            Price = 20000.0,
                            ProductId = "P002",
                            Quantity = 5
                        },
                        new
                        {
                            OrderProductId = "d0458710-f602-42fe-80f2-b878baceb803",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6598),
                            OrderId = "O002",
                            Price = 80000.0,
                            ProductId = "P003",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "a947a33e-96f0-475a-bbdc-18a153e48d9f",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6603),
                            OrderId = "O002",
                            Price = 100000.0,
                            ProductId = "P004",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "a1fffc77-34bb-417a-b9b8-9d2b335b7435",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6605),
                            OrderId = "O003",
                            Price = 25000.0,
                            ProductId = "P005",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "163f40fd-904d-4536-9e4c-4537084a4447",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6608),
                            OrderId = "O003",
                            Price = 40000.0,
                            ProductId = "P006",
                            Quantity = 3
                        },
                        new
                        {
                            OrderProductId = "3fbc8108-8d5f-4309-a1b9-fa2392827432",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6610),
                            OrderId = "O004",
                            Price = 15000.0,
                            ProductId = "P007",
                            Quantity = 4
                        },
                        new
                        {
                            OrderProductId = "e51fd5be-ec33-4c7b-8388-724cad48c868",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6614),
                            OrderId = "O004",
                            Price = 50000.0,
                            ProductId = "P008",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "b9db0ddd-711d-485a-a8c6-3685a27a1365",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6618),
                            OrderId = "O005",
                            Price = 60000.0,
                            ProductId = "P009",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "38524500-ec96-4724-b04d-5d56dd165c02",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6621),
                            OrderId = "O005",
                            Price = 120000.0,
                            ProductId = "P010",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "78eaae0a-b01b-4580-b19d-27b2287f4159",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6624),
                            OrderId = "O006",
                            Price = 35000.0,
                            ProductId = "P011",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "fd67ab57-37ed-4910-88c0-1e51062eeb71",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6628),
                            OrderId = "O006",
                            Price = 45000.0,
                            ProductId = "P012",
                            Quantity = 3
                        },
                        new
                        {
                            OrderProductId = "d969dd99-ceb9-4d2d-8a4d-147010b8c43f",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6631),
                            OrderId = "O007",
                            Price = 18000.0,
                            ProductId = "P013",
                            Quantity = 5
                        },
                        new
                        {
                            OrderProductId = "ee1f6468-1228-4ead-9efe-d76a6058c8a1",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6634),
                            OrderId = "O007",
                            Price = 90000.0,
                            ProductId = "P014",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "ce223e5c-86f3-4cb9-9eb8-4bdd3b0b7144",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6636),
                            OrderId = "O008",
                            Price = 22000.0,
                            ProductId = "P015",
                            Quantity = 4
                        },
                        new
                        {
                            OrderProductId = "12466dff-f8b4-4c69-9718-8cab8ea0517a",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6640),
                            OrderId = "O008",
                            Price = 30000.0,
                            ProductId = "P001",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "044565d8-965f-4e1e-8751-d3ddb9921809",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6643),
                            OrderId = "O009",
                            Price = 20000.0,
                            ProductId = "P002",
                            Quantity = 6
                        },
                        new
                        {
                            OrderProductId = "0c7e4605-8533-4118-9d71-51ef7fac3566",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6645),
                            OrderId = "O009",
                            Price = 80000.0,
                            ProductId = "P003",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "6321e69f-0e48-4a69-a1c1-b53b88c20252",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6648),
                            OrderId = "O010",
                            Price = 100000.0,
                            ProductId = "P004",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "a669a321-c8c3-404e-93fa-9cc7c44972f2",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6652),
                            OrderId = "O010",
                            Price = 25000.0,
                            ProductId = "P005",
                            Quantity = 3
                        },
                        new
                        {
                            OrderProductId = "9f7c4c90-66dd-4a15-8968-ef1e8ee41a40",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6654),
                            OrderId = "O011",
                            Price = 40000.0,
                            ProductId = "P006",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "5eeece81-d0c8-4f88-be86-730a74602f2d",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6657),
                            OrderId = "O011",
                            Price = 15000.0,
                            ProductId = "P007",
                            Quantity = 4
                        },
                        new
                        {
                            OrderProductId = "bb95550b-0ad1-44f4-830f-10296d2e91be",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6660),
                            OrderId = "O012",
                            Price = 50000.0,
                            ProductId = "P008",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "84218330-cd38-4669-aeac-7efc413fc4a8",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6664),
                            OrderId = "O012",
                            Price = 60000.0,
                            ProductId = "P009",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "4f12242e-48ae-4d50-a847-1f35d9d3a4bf",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6695),
                            OrderId = "O013",
                            Price = 120000.0,
                            ProductId = "P010",
                            Quantity = 1
                        },
                        new
                        {
                            OrderProductId = "5c600d0d-2ef9-4918-a8c9-dc13011743de",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6698),
                            OrderId = "O013",
                            Price = 35000.0,
                            ProductId = "P011",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "faef634d-4634-403f-82ea-3f4b7663cce6",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6701),
                            OrderId = "O014",
                            Price = 45000.0,
                            ProductId = "P012",
                            Quantity = 3
                        },
                        new
                        {
                            OrderProductId = "777563e1-0d64-4dd9-a724-152c4e671e72",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6705),
                            OrderId = "O014",
                            Price = 18000.0,
                            ProductId = "P013",
                            Quantity = 5
                        },
                        new
                        {
                            OrderProductId = "15d71dff-8925-479e-9b15-cc18f8a85540",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6708),
                            OrderId = "O015",
                            Price = 90000.0,
                            ProductId = "P014",
                            Quantity = 2
                        },
                        new
                        {
                            OrderProductId = "f5936b83-ea00-4e84-9632-1e88d1b2e0b9",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6711),
                            OrderId = "O015",
                            Price = 22000.0,
                            ProductId = "P015",
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Package", b =>
                {
                    b.Property<string>("PackageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("PackageId");

                    b.ToTable("Package");

                    b.HasData(
                        new
                        {
                            PackageId = "PKG001",
                            Description = "Rent a single character for an event",
                            PackageName = "Basic Character Rental",
                            Price = 100000.0
                        },
                        new
                        {
                            PackageId = "PKG002",
                            Description = "Rent multiple characters with costumes",
                            PackageName = "Deluxe Character Rental",
                            Price = 250000.0
                        },
                        new
                        {
                            PackageId = "PKG003",
                            Description = "Full-day character rental service",
                            PackageName = "Ultimate Character Rental",
                            Price = 500000.0
                        },
                        new
                        {
                            PackageId = "PKG004",
                            Description = "Basic cosplay performance at an event",
                            PackageName = "Standard Cosplay Performance",
                            Price = 150000.0
                        },
                        new
                        {
                            PackageId = "PKG005",
                            Description = "Advanced performance with choreography",
                            PackageName = "Premium Cosplay Performance",
                            Price = 300000.0
                        },
                        new
                        {
                            PackageId = "PKG006",
                            Description = "Exclusive show with audience interaction",
                            PackageName = "VIP Cosplay Performance",
                            Price = 500000.0
                        },
                        new
                        {
                            PackageId = "PKG007",
                            Description = "30-minute photoshoot with cosplayers",
                            PackageName = "Mini Photography Session",
                            Price = 80000.0
                        },
                        new
                        {
                            PackageId = "PKG008",
                            Description = "1-hour professional photoshoot",
                            PackageName = "Standard Photography Session",
                            Price = 150000.0
                        },
                        new
                        {
                            PackageId = "PKG009",
                            Description = "Complete photoshoot with editing",
                            PackageName = "Full Photography Package",
                            Price = 300000.0
                        },
                        new
                        {
                            PackageId = "PKG010",
                            Description = "Includes exclusive cosplay merchandise",
                            PackageName = "Basic Merchandise Pack",
                            Price = 50000.0
                        },
                        new
                        {
                            PackageId = "PKG011",
                            Description = "Premium cosplay collectibles",
                            PackageName = "Deluxe Merchandise Pack",
                            Price = 150000.0
                        },
                        new
                        {
                            PackageId = "PKG012",
                            Description = "Limited edition cosplay items",
                            PackageName = "Ultimate Merchandise Pack",
                            Price = 300000.0
                        },
                        new
                        {
                            PackageId = "PKG013",
                            Description = "Beginner-friendly cosplay training",
                            PackageName = "Cosplay Basics Workshop",
                            Price = 100000.0
                        },
                        new
                        {
                            PackageId = "PKG014",
                            Description = "In-depth cosplay and makeup course",
                            PackageName = "Advanced Cosplay Training",
                            Price = 2500000.0
                        },
                        new
                        {
                            PackageId = "PKG015",
                            Description = "Professional-level training for cosplayers",
                            PackageName = "Master Cosplay Workshop",
                            Price = 500000.0
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Payment", b =>
                {
                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountCouponID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ContractId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Purpose")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TicketAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("AccountCouponID")
                        .IsUnique()
                        .HasFilter("[AccountCouponID] IS NOT NULL");

                    b.HasIndex("ContractId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TicketAccountId")
                        .IsUnique()
                        .HasFilter("[TicketAccountId] IS NOT NULL");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            PaymentId = "P001",
                            AccountCouponID = "AC001",
                            Amount = 250000.0,
                            CreatAt = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 0,
                            Status = 1,
                            TicketAccountId = "TA001",
                            TransactionId = "TXN001",
                            Type = "Online"
                        },
                        new
                        {
                            PaymentId = "P002",
                            Amount = 150000.5,
                            CreatAt = new DateTime(2024, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 0,
                            Status = 0,
                            TicketAccountId = "TA002",
                            TransactionId = "TXN002",
                            Type = "Online"
                        },
                        new
                        {
                            PaymentId = "P003",
                            Amount = 90000.0,
                            CreatAt = new DateTime(2024, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 0,
                            Status = 1,
                            TicketAccountId = "TA003",
                            TransactionId = "TXN003",
                            Type = "Cash"
                        },
                        new
                        {
                            PaymentId = "P004",
                            AccountCouponID = "AC012",
                            Amount = 400000.0,
                            CreatAt = new DateTime(2024, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 0,
                            Status = 1,
                            TicketAccountId = "TA004",
                            TransactionId = "TXN004",
                            Type = "Card"
                        },
                        new
                        {
                            PaymentId = "P005",
                            Amount = 175000.0,
                            CreatAt = new DateTime(2024, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 0,
                            Status = 2,
                            TicketAccountId = "TA005",
                            TransactionId = "TXN005",
                            Type = "Online"
                        },
                        new
                        {
                            PaymentId = "P006",
                            AccountCouponID = "AC003",
                            Amount = 225000.0,
                            CreatAt = new DateTime(2024, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = "O006",
                            Purpose = 3,
                            Status = 1,
                            TransactionId = "TXN006",
                            Type = "Cash"
                        },
                        new
                        {
                            PaymentId = "P007",
                            Amount = 350000.0,
                            CreatAt = new DateTime(2024, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = "O007",
                            Purpose = 3,
                            Status = 0,
                            TransactionId = "TXN007",
                            Type = "Online"
                        },
                        new
                        {
                            PaymentId = "P008",
                            Amount = 150000.0,
                            CreatAt = new DateTime(2024, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = "O008",
                            Purpose = 3,
                            Status = 1,
                            TransactionId = "TXN008",
                            Type = "Card"
                        },
                        new
                        {
                            PaymentId = "P009",
                            Amount = 500000.0,
                            CreatAt = new DateTime(2024, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = "O009",
                            Purpose = 3,
                            Status = 1,
                            TransactionId = "TXN009",
                            Type = "Cash"
                        },
                        new
                        {
                            PaymentId = "P010",
                            AccountCouponID = "AC004",
                            Amount = 125000.0,
                            CreatAt = new DateTime(2024, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = "O010",
                            Purpose = 3,
                            Status = 2,
                            TransactionId = "TXN010",
                            Type = "Online"
                        },
                        new
                        {
                            PaymentId = "P011",
                            Amount = 325000.0,
                            ContractId = "CT002",
                            CreatAt = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 1,
                            Status = 1,
                            TransactionId = "TXN011",
                            Type = "Online"
                        },
                        new
                        {
                            PaymentId = "P012",
                            Amount = 410000.0,
                            ContractId = "CT005",
                            CreatAt = new DateTime(2024, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 1,
                            Status = 0,
                            TransactionId = "TXN012",
                            Type = "Card"
                        },
                        new
                        {
                            PaymentId = "P013",
                            Amount = 90000.0,
                            ContractId = "CT008",
                            CreatAt = new DateTime(2024, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 2,
                            Status = 1,
                            TransactionId = "TXN013",
                            Type = "Cash"
                        },
                        new
                        {
                            PaymentId = "P014",
                            Amount = 350000.0,
                            ContractId = "CT010",
                            CreatAt = new DateTime(2024, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 2,
                            Status = 2,
                            TransactionId = "TXN014",
                            Type = "Online"
                        },
                        new
                        {
                            PaymentId = "P015",
                            Amount = 200000.0,
                            ContractId = "CT002",
                            CreatAt = new DateTime(2024, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Purpose = 2,
                            Status = 1,
                            TransactionId = "TXN015",
                            Type = "Card"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<int>("length")
                        .HasColumnType("int");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = "P001",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4457),
                            Description = "A wig for Naruto cosplay",
                            IsActive = true,
                            Price = 30000.0,
                            ProductName = "Naruto Wig",
                            Quantity = 10,
                            height = 10,
                            length = 30,
                            weight = 200,
                            width = 20
                        },
                        new
                        {
                            ProductId = "P002",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4463),
                            Description = "A hat for Mario cosplay",
                            IsActive = true,
                            Price = 20000.0,
                            ProductName = "Mario Hat",
                            Quantity = 15,
                            height = 15,
                            length = 25,
                            weight = 100,
                            width = 25
                        },
                        new
                        {
                            ProductId = "P003",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4466),
                            Description = "Complete costume for Sasuke cosplay",
                            IsActive = true,
                            Price = 80000.0,
                            ProductName = "Sasuke Costume",
                            Quantity = 5,
                            height = 15,
                            length = 50,
                            weight = 800,
                            width = 40
                        },
                        new
                        {
                            ProductId = "P004",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4471),
                            Description = "Replica sword from The Legend of Zelda",
                            IsActive = true,
                            Price = 100000.0,
                            ProductName = "Zelda Sword",
                            Quantity = 7,
                            height = 5,
                            length = 120,
                            weight = 1500,
                            width = 15
                        },
                        new
                        {
                            ProductId = "P005",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4474),
                            Description = "Iconic straw hat from One Piece",
                            IsActive = true,
                            Price = 25000.0,
                            ProductName = "One Piece Straw Hat",
                            Quantity = 20,
                            height = 10,
                            length = 35,
                            weight = 300,
                            width = 35
                        },
                        new
                        {
                            ProductId = "P006",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4477),
                            Description = "Hatsune Miku blue twin-tail wig",
                            IsActive = true,
                            Price = 40000.0,
                            ProductName = "Miku Wig",
                            Quantity = 12,
                            height = 5,
                            length = 40,
                            weight = 150,
                            width = 25
                        },
                        new
                        {
                            ProductId = "P007",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4482),
                            Description = "Tanjiro's iconic hanafuda earrings",
                            IsActive = true,
                            Price = 15000.0,
                            ProductName = "Demon Slayer Earrings",
                            Quantity = 30,
                            height = 3,
                            length = 5,
                            weight = 50,
                            width = 5
                        },
                        new
                        {
                            ProductId = "P008",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4485),
                            Description = "Survey Corps uniform jacket",
                            IsActive = true,
                            Price = 50000.0,
                            ProductName = "Attack on Titan Jacket",
                            Quantity = 10,
                            height = 5,
                            length = 50,
                            weight = 800,
                            width = 40
                        },
                        new
                        {
                            ProductId = "P009",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4489),
                            Description = "Cozy Pikachu-themed onesie",
                            IsActive = true,
                            Price = 60000.0,
                            ProductName = "Pikachu Onesie",
                            Quantity = 8,
                            height = 10,
                            length = 60,
                            weight = 700,
                            width = 50
                        },
                        new
                        {
                            ProductId = "P010",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4492),
                            Description = "Final Fantasy VII replica sword",
                            IsActive = true,
                            Price = 120000.0,
                            ProductName = "Cloud's Buster Sword",
                            Quantity = 4,
                            height = 10,
                            length = 160,
                            weight = 2000,
                            width = 25
                        },
                        new
                        {
                            ProductId = "P011",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4495),
                            Description = "LED Vision accessory from Genshin Impact",
                            IsActive = true,
                            Price = 35000.0,
                            ProductName = "Genshin Impact Vision",
                            Quantity = 25,
                            height = 5,
                            length = 10,
                            weight = 100,
                            width = 10
                        },
                        new
                        {
                            ProductId = "P012",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4499),
                            Description = "Jinx cosplay wig from Arcane",
                            IsActive = true,
                            Price = 45000.0,
                            ProductName = "Jinx Wig",
                            Quantity = 6,
                            height = 10,
                            length = 40,
                            weight = 250,
                            width = 25
                        },
                        new
                        {
                            ProductId = "P013",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4502),
                            Description = "Golden tiara from Sailor Moon",
                            IsActive = true,
                            Price = 18000.0,
                            ProductName = "Sailor Moon Tiara",
                            Quantity = 15,
                            height = 5,
                            length = 15,
                            weight = 50,
                            width = 15
                        },
                        new
                        {
                            ProductId = "P014",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4505),
                            Description = "High-quality Spider-Man suit",
                            IsActive = true,
                            Price = 90000.0,
                            ProductName = "Spider-Man Suit",
                            Quantity = 3,
                            height = 5,
                            length = 70,
                            weight = 1500,
                            width = 40
                        },
                        new
                        {
                            ProductId = "P015",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4508),
                            Description = "Replica wand from Harry Potter series",
                            IsActive = true,
                            Price = 22000.0,
                            ProductName = "Harry Potter Wand",
                            Quantity = 50,
                            height = 5,
                            length = 35,
                            weight = 200,
                            width = 5
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ProductImage", b =>
                {
                    b.Property<string>("ProductImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsAvatar")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");

                    b.HasData(
                        new
                        {
                            ProductImageId = "IMG001",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6810),
                            ProductId = "P001",
                            UrlImage = "https://example.com/images/naruto_wig.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG002",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6813),
                            ProductId = "P002",
                            UrlImage = "https://example.com/images/mario_hat.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG003",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6814),
                            ProductId = "P003",
                            UrlImage = "https://example.com/images/sasuke_costume.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG004",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6816),
                            ProductId = "P004",
                            UrlImage = "https://example.com/images/zelda_sword.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG005",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6819),
                            ProductId = "P005",
                            UrlImage = "https://example.com/images/one_piece_hat.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG006",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6821),
                            ProductId = "P006",
                            UrlImage = "https://example.com/images/miku_wig.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG007",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6823),
                            ProductId = "P007",
                            UrlImage = "https://example.com/images/demon_slayer_earrings.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG008",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6824),
                            ProductId = "P008",
                            UrlImage = "https://example.com/images/aot_jacket.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG009",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6826),
                            ProductId = "P009",
                            UrlImage = "https://example.com/images/pikachu_onesie.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG010",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6828),
                            ProductId = "P010",
                            UrlImage = "https://example.com/images/buster_sword.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG011",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6829),
                            ProductId = "P011",
                            UrlImage = "https://example.com/images/genshin_vision.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG012",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6831),
                            ProductId = "P012",
                            UrlImage = "https://example.com/images/jinx_wig.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG013",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6866),
                            ProductId = "P013",
                            UrlImage = "https://example.com/images/sailor_moon_tiara.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG014",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6868),
                            ProductId = "P014",
                            UrlImage = "https://example.com/images/spiderman_suit.jpg"
                        },
                        new
                        {
                            ProductImageId = "IMG015",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6869),
                            ProductId = "P015",
                            UrlImage = "https://example.com/images/harry_potter_wand.jpg"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.RefreshToken", b =>
                {
                    b.Property<string>("RefreshTokenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshTokenValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefreshTokenId");

                    b.HasIndex("AccountId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Request", b =>
                {
                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountCouponId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deposit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RequestId");

                    b.HasIndex("AccountCouponId");

                    b.HasIndex("AccountId");

                    b.HasIndex("PackageId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Request");

                    b.HasData(
                        new
                        {
                            RequestId = "R001",
                            AccountId = "A001",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5431),
                            Description = "RentCostumes",
                            EndDate = new DateTime(2025, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "HCM",
                            Name = "Rent Naruto Costume",
                            PackageId = "PKG001",
                            Price = 100000.0,
                            ServiceId = "S003",
                            StartDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            RequestId = "R002",
                            AccountId = "A002",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5446),
                            Description = "RentCosplayer",
                            EndDate = new DateTime(2025, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "ĐN",
                            Name = "Rent Cosplayer for Event",
                            Price = 500000.0,
                            Reason = "Cosplayer is busy",
                            ServiceId = "S002",
                            StartDate = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RequestId = "R003",
                            AccountId = "A003",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5451),
                            Description = "CreateEvent",
                            EndDate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "BD",
                            Name = "Create Anime Festival",
                            Price = 2000000.0,
                            ServiceId = "S003",
                            StartDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            RequestId = "R004",
                            AccountId = "A004",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5455),
                            Description = "RentCostumes",
                            EndDate = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "HN",
                            Name = "Rent Samurai Armor",
                            Price = 150000.0,
                            ServiceId = "S002",
                            StartDate = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestId = "R005",
                            AccountId = "A005",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5461),
                            Description = "RentCosplayer",
                            EndDate = new DateTime(2025, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "BT",
                            Name = "Hire Professional Cosplayer",
                            PackageId = "PKG002",
                            Price = 700000.0,
                            ServiceId = "S002",
                            StartDate = new DateTime(2025, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RequestId = "R006",
                            AccountId = "A006",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5527),
                            Description = "CreateEvent",
                            EndDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "HCM",
                            Name = "Organize Comic Convention",
                            Price = 5000000.0,
                            ServiceId = "S001",
                            StartDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            RequestId = "R007",
                            AccountId = "A007",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5530),
                            Description = "RentCostumes",
                            EndDate = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "HCM",
                            Name = "Rent Victorian Costume",
                            Price = 120000.0,
                            Reason = "Cosplayer is busy",
                            ServiceId = "S002",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestId = "R008",
                            AccountId = "A008",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5535),
                            Description = "RentCosplayer",
                            EndDate = new DateTime(2025, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "QN",
                            Name = "Book Cosplayer for Birthday Party",
                            Price = 350000.0,
                            ServiceId = "S003",
                            StartDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RequestId = "R009",
                            AccountId = "A009",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5538),
                            Description = "CreateEvent",
                            EndDate = new DateTime(2025, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "CM",
                            Name = "Plan Fantasy Fair",
                            Price = 3000000.0,
                            ServiceId = "S003",
                            StartDate = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            RequestId = "R010",
                            AccountId = "A010",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5543),
                            Description = "RentCostumes",
                            EndDate = new DateTime(2025, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "LĐ",
                            Name = "Rent Halloween Costumes",
                            Price = 200000.0,
                            ServiceId = "S001",
                            StartDate = new DateTime(2025, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RequestId = "R011",
                            AccountId = "A011",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5547),
                            Description = "RentCosplayer",
                            EndDate = new DateTime(2025, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "NT",
                            Name = "Hire Cosplayer for Wedding",
                            PackageId = "PKG010",
                            Price = 800000.0,
                            ServiceId = "S001",
                            StartDate = new DateTime(2025, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            RequestId = "R012",
                            AccountId = "A012",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5551),
                            Description = "CreateEvent",
                            EndDate = new DateTime(2025, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "VT",
                            Name = "Create Sci-Fi Convention",
                            Price = 4500000.0,
                            ServiceId = "S002",
                            StartDate = new DateTime(2025, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestId = "R013",
                            AccountId = "A013",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5556),
                            Description = "RentCostumes",
                            EndDate = new DateTime(2025, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "HCM",
                            Name = "Rent Santa Claus Costume",
                            Price = 130000.0,
                            ServiceId = "S003",
                            StartDate = new DateTime(2025, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            RequestId = "R014",
                            AccountId = "A014",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5559),
                            Description = "RentCosplayer",
                            EndDate = new DateTime(2025, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "HN",
                            Name = "Book Cosplayer for Product Launch",
                            Price = 600000.0,
                            ServiceId = "S001",
                            StartDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RequestId = "R015",
                            AccountId = "A015",
                            CreatedDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5563),
                            Description = "CreateEvent",
                            EndDate = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "HCM",
                            Name = "Host Christmas Event",
                            PackageId = "PKG015",
                            Price = 5500000.0,
                            ServiceId = "S002",
                            StartDate = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.RequestCharacter", b =>
                {
                    b.Property<string>("RequestCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CosplayerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RequestCharacterId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestCharacter");

                    b.HasData(
                        new
                        {
                            RequestCharacterId = "RC01",
                            CharacterId = "CH001",
                            CosplayerId = "A025",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6908),
                            Description = "Yêu cầu cosplay nhân vật CH001",
                            Quantity = 1,
                            RequestId = "R001",
                            TotalPrice = 50000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6909)
                        },
                        new
                        {
                            RequestCharacterId = "RC02",
                            CharacterId = "CH002",
                            CosplayerId = "A026",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6916),
                            Description = "Yêu cầu cosplay nhân vật CH002",
                            Quantity = 1,
                            RequestId = "R002",
                            TotalPrice = 60000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6916)
                        },
                        new
                        {
                            RequestCharacterId = "RC03",
                            CharacterId = "CH003",
                            CosplayerId = "A027",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6919),
                            Description = "Yêu cầu cosplay nhân vật CH003",
                            Quantity = 1,
                            RequestId = "R003",
                            TotalPrice = 70000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6919)
                        },
                        new
                        {
                            RequestCharacterId = "RC04",
                            CharacterId = "CH004",
                            CosplayerId = "A028",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6922),
                            Description = "Yêu cầu cosplay nhân vật CH004",
                            Quantity = 1,
                            RequestId = "R004",
                            TotalPrice = 80000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6922)
                        },
                        new
                        {
                            RequestCharacterId = "RC05",
                            CharacterId = "CH005",
                            CosplayerId = "A029",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6925),
                            Description = "Yêu cầu cosplay nhân vật CH005",
                            Quantity = 1,
                            RequestId = "R005",
                            TotalPrice = 90000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6925)
                        },
                        new
                        {
                            RequestCharacterId = "RC06",
                            CharacterId = "CH006",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6930),
                            Description = "Yêu cầu cosplay nhân vật CH006",
                            Quantity = 5,
                            RequestId = "R006",
                            TotalPrice = 100000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6930)
                        },
                        new
                        {
                            RequestCharacterId = "RC07",
                            CharacterId = "CH007",
                            CosplayerId = "A031",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6933),
                            Description = "Yêu cầu cosplay nhân vật CH007",
                            Quantity = 1,
                            RequestId = "R007",
                            TotalPrice = 110000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6933)
                        },
                        new
                        {
                            RequestCharacterId = "RC08",
                            CharacterId = "CH008",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6935),
                            Description = "Yêu cầu cosplay nhân vật CH008",
                            Quantity = 7,
                            RequestId = "R008",
                            TotalPrice = 120000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6936)
                        },
                        new
                        {
                            RequestCharacterId = "RC09",
                            CharacterId = "CH009",
                            CosplayerId = "A033",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6938),
                            Description = "Yêu cầu cosplay nhân vật CH009",
                            Quantity = 1,
                            RequestId = "R009",
                            TotalPrice = 130000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6939)
                        },
                        new
                        {
                            RequestCharacterId = "RC10",
                            CharacterId = "CH010",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6941),
                            Description = "Yêu cầu cosplay nhân vật CH010",
                            Quantity = 9,
                            RequestId = "R010",
                            TotalPrice = 140000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6942)
                        },
                        new
                        {
                            RequestCharacterId = "RC11",
                            CharacterId = "CH011",
                            CosplayerId = "A035",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6944),
                            Description = "Yêu cầu cosplay nhân vật CH011",
                            Quantity = 1,
                            RequestId = "R011",
                            TotalPrice = 150000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6945)
                        },
                        new
                        {
                            RequestCharacterId = "RC12",
                            CharacterId = "CH012",
                            CosplayerId = "A036",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6947),
                            Description = "Yêu cầu cosplay nhân vật CH012",
                            Quantity = 1,
                            RequestId = "R012",
                            TotalPrice = 160000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6947)
                        },
                        new
                        {
                            RequestCharacterId = "RC13",
                            CharacterId = "CH013",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6950),
                            Description = "Yêu cầu cosplay nhân vật CH013",
                            Quantity = 10,
                            RequestId = "R013",
                            TotalPrice = 170000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6950)
                        },
                        new
                        {
                            RequestCharacterId = "RC14",
                            CharacterId = "CH014",
                            CosplayerId = "A038",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6954),
                            Description = "Yêu cầu cosplay nhân vật CH014",
                            Quantity = 1,
                            RequestId = "R014",
                            TotalPrice = 180000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6955)
                        },
                        new
                        {
                            RequestCharacterId = "RC15",
                            CharacterId = "CH015",
                            CosplayerId = "A039",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6957),
                            Description = "Yêu cầu cosplay nhân vật CH015",
                            Quantity = 1,
                            RequestId = "R015",
                            TotalPrice = 190000.0,
                            UpdateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(6958)
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.RequestDate", b =>
                {
                    b.Property<string>("RequestDateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("RequestDateId");

                    b.HasIndex("ContractCharacterId");

                    b.HasIndex("RequestCharacterId");

                    b.ToTable("RequestDate");

                    b.HasData(
                        new
                        {
                            RequestDateId = "RD01",
                            EndDate = new DateTime(2025, 1, 10, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC01",
                            StartDate = new DateTime(2025, 1, 10, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD02",
                            EndDate = new DateTime(2025, 1, 11, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC01",
                            StartDate = new DateTime(2025, 1, 11, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD03",
                            EndDate = new DateTime(2025, 1, 12, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC01",
                            StartDate = new DateTime(2025, 1, 12, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD04",
                            EndDate = new DateTime(2025, 1, 13, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC01",
                            StartDate = new DateTime(2025, 1, 13, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD05",
                            EndDate = new DateTime(2025, 1, 14, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC01",
                            StartDate = new DateTime(2025, 1, 14, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD06",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reason = "Cosplayer is busy",
                            RequestCharacterId = "RC02",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RequestDateId = "RD07",
                            EndDate = new DateTime(2025, 4, 10, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC04",
                            StartDate = new DateTime(2025, 4, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD08",
                            EndDate = new DateTime(2025, 4, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC04",
                            StartDate = new DateTime(2025, 4, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD09",
                            EndDate = new DateTime(2025, 4, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC04",
                            StartDate = new DateTime(2025, 4, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD10",
                            EndDate = new DateTime(2025, 4, 13, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC04",
                            StartDate = new DateTime(2025, 4, 13, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD11",
                            EndDate = new DateTime(2025, 4, 14, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC04",
                            StartDate = new DateTime(2025, 4, 14, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD12",
                            EndDate = new DateTime(2025, 4, 15, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC04",
                            StartDate = new DateTime(2025, 4, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD13",
                            EndDate = new DateTime(2025, 5, 3, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC05",
                            StartDate = new DateTime(2025, 5, 3, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD14",
                            EndDate = new DateTime(2025, 5, 4, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC05",
                            StartDate = new DateTime(2025, 5, 4, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD15",
                            EndDate = new DateTime(2025, 5, 5, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC05",
                            StartDate = new DateTime(2025, 5, 5, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD16",
                            EndDate = new DateTime(2025, 5, 6, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC05",
                            StartDate = new DateTime(2025, 5, 6, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD17",
                            EndDate = new DateTime(2025, 5, 7, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC05",
                            StartDate = new DateTime(2025, 5, 7, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD18",
                            EndDate = new DateTime(2025, 6, 12, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC06",
                            StartDate = new DateTime(2025, 6, 12, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD19",
                            EndDate = new DateTime(2025, 6, 13, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC06",
                            StartDate = new DateTime(2025, 6, 13, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD20",
                            EndDate = new DateTime(2025, 6, 14, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC06",
                            StartDate = new DateTime(2025, 6, 14, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD21",
                            EndDate = new DateTime(2025, 6, 15, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC06",
                            StartDate = new DateTime(2025, 6, 15, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD22",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Reason = "Cosplayer is busy",
                            RequestCharacterId = "RC07",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            RequestDateId = "RD23",
                            EndDate = new DateTime(2025, 10, 25, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC10",
                            StartDate = new DateTime(2025, 10, 25, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD24",
                            EndDate = new DateTime(2025, 11, 20, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC11",
                            StartDate = new DateTime(2025, 11, 20, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD25",
                            EndDate = new DateTime(2025, 12, 5, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC12",
                            StartDate = new DateTime(2025, 12, 5, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD26",
                            EndDate = new DateTime(2025, 12, 6, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC12",
                            StartDate = new DateTime(2025, 12, 6, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD27",
                            EndDate = new DateTime(2025, 12, 7, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC12",
                            StartDate = new DateTime(2025, 12, 7, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD28",
                            EndDate = new DateTime(2025, 12, 8, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC12",
                            StartDate = new DateTime(2025, 12, 8, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD29",
                            EndDate = new DateTime(2025, 12, 9, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC12",
                            StartDate = new DateTime(2025, 12, 9, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD30",
                            EndDate = new DateTime(2025, 12, 10, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC12",
                            StartDate = new DateTime(2025, 12, 10, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD31",
                            EndDate = new DateTime(2025, 6, 30, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC14",
                            StartDate = new DateTime(2025, 6, 30, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD32",
                            EndDate = new DateTime(2025, 7, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC14",
                            StartDate = new DateTime(2025, 7, 1, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD33",
                            EndDate = new DateTime(2025, 7, 2, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC14",
                            StartDate = new DateTime(2025, 7, 2, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            RequestDateId = "RD34",
                            EndDate = new DateTime(2025, 12, 15, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            RequestCharacterId = "RC15",
                            StartDate = new DateTime(2025, 12, 15, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "R001",
                            Description = "System Administrator",
                            RoleName = 0
                        },
                        new
                        {
                            Id = "R002",
                            Description = "Event and Service Manager",
                            RoleName = 1
                        },
                        new
                        {
                            Id = "R003",
                            Description = "Customer Service Consultant",
                            RoleName = 2
                        },
                        new
                        {
                            Id = "R004",
                            Description = "Professional Cosplayer",
                            RoleName = 3
                        },
                        new
                        {
                            Id = "R005",
                            Description = "Regular Customer",
                            RoleName = 4
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Service", b =>
                {
                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ServiceId");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            ServiceId = "S001",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4411),
                            Description = "Rent characters for events and parties",
                            ServiceName = "Character Rental"
                        },
                        new
                        {
                            ServiceId = "S002",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4414),
                            Description = "Live cosplay performances at events",
                            ServiceName = "Cosplay Rental"
                        },
                        new
                        {
                            ServiceId = "S003",
                            CreateDate = new DateTime(2025, 5, 18, 17, 6, 8, 815, DateTimeKind.Utc).AddTicks(4415),
                            Description = "Professional photoshoot with cosplayers",
                            ServiceName = "Create event"
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Task", b =>
                {
                    b.Property<string>("TaskId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventCharacterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TaskId");

                    b.HasIndex("AccountId");

                    b.HasIndex("ContractCharacterId");

                    b.HasIndex("EventCharacterId")
                        .IsUnique()
                        .HasFilter("[EventCharacterId] IS NOT NULL");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            TaskId = "T001",
                            AccountId = "A001",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5616),
                            Description = "Cosplay as anime characters",
                            EndDate = new DateTime(2025, 5, 22, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5615),
                            EventCharacterId = "EC001",
                            IsActive = true,
                            Location = "Tokyo",
                            StartDate = new DateTime(2025, 5, 21, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5608),
                            Status = 0,
                            TaskName = "CH001",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5617)
                        },
                        new
                        {
                            TaskId = "T002",
                            AccountId = "A004",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5622),
                            Description = "Join cosplay contest",
                            EndDate = new DateTime(2025, 5, 24, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5621),
                            EventCharacterId = "EC002",
                            IsActive = true,
                            Location = "Los Angeles",
                            StartDate = new DateTime(2025, 5, 23, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5621),
                            Status = 1,
                            TaskName = "CH002",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5623)
                        },
                        new
                        {
                            TaskId = "T003",
                            AccountId = "A005",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5628),
                            Description = "Teach costume making",
                            EndDate = new DateTime(2025, 5, 26, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5627),
                            EventCharacterId = "EC003",
                            IsActive = true,
                            Location = "New York",
                            StartDate = new DateTime(2025, 5, 25, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5627),
                            Status = 2,
                            TaskName = "CH003",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5628)
                        },
                        new
                        {
                            TaskId = "T004",
                            AccountId = "A007",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5632),
                            Description = "Host a live event",
                            EndDate = new DateTime(2025, 5, 20, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5631),
                            EventCharacterId = "EC004",
                            IsActive = true,
                            Location = "Online",
                            StartDate = new DateTime(2025, 5, 20, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5631),
                            Status = 3,
                            TaskName = "CH004",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5633)
                        },
                        new
                        {
                            TaskId = "T005",
                            AccountId = "A008",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5637),
                            Description = "Professional cosplay photoshoot",
                            EndDate = new DateTime(2025, 5, 28, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5636),
                            EventCharacterId = "EC005",
                            IsActive = true,
                            Location = "Paris",
                            StartDate = new DateTime(2025, 5, 27, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5635),
                            Status = 0,
                            TaskName = "CH005",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5637)
                        },
                        new
                        {
                            TaskId = "T006",
                            AccountId = "A010",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5644),
                            Description = "Evaluate contestants",
                            EndDate = new DateTime(2025, 5, 30, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5643),
                            EventCharacterId = "EC006",
                            IsActive = true,
                            Location = "Berlin",
                            StartDate = new DateTime(2025, 5, 29, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5643),
                            Status = 1,
                            TaskName = "CH006",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5644)
                        },
                        new
                        {
                            TaskId = "T007",
                            AccountId = "A012",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5649),
                            Description = "Walk in parade",
                            EndDate = new DateTime(2025, 6, 1, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5649),
                            EventCharacterId = "EC007",
                            IsActive = true,
                            Location = "Seoul",
                            StartDate = new DateTime(2025, 5, 31, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5647),
                            Status = 2,
                            TaskName = "CH007",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5650)
                        },
                        new
                        {
                            TaskId = "T008",
                            AccountId = "A013",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5654),
                            Description = "Perform on live TV",
                            EndDate = new DateTime(2025, 6, 3, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5653),
                            EventCharacterId = "EC008",
                            IsActive = true,
                            Location = "London",
                            StartDate = new DateTime(2025, 6, 2, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5652),
                            Status = 3,
                            TaskName = "CH008",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5654)
                        },
                        new
                        {
                            TaskId = "T009",
                            AccountId = "A015",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5658),
                            Description = "Perform for charity",
                            EndDate = new DateTime(2025, 6, 5, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5657),
                            EventCharacterId = "EC009",
                            IsActive = true,
                            Location = "Sydney",
                            StartDate = new DateTime(2025, 6, 4, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5657),
                            Status = 4,
                            TaskName = "CH008",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5659)
                        },
                        new
                        {
                            TaskId = "T010",
                            AccountId = "A005",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5662),
                            Description = "Talk about cosplay industry",
                            EndDate = new DateTime(2025, 6, 7, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5662),
                            EventCharacterId = "EC010",
                            IsActive = true,
                            Location = "San Diego",
                            StartDate = new DateTime(2025, 6, 6, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5661),
                            Status = 0,
                            TaskName = "CH009",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5663)
                        },
                        new
                        {
                            TaskId = "T011",
                            AccountId = "A008",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5668),
                            Description = "New character shoot",
                            EndDate = new DateTime(2025, 6, 9, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5668),
                            EventCharacterId = "EC011",
                            IsActive = true,
                            Location = "Bangkok",
                            StartDate = new DateTime(2025, 6, 8, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5666),
                            Status = 1,
                            TaskName = "CH010",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5669)
                        },
                        new
                        {
                            TaskId = "T012",
                            AccountId = "A007",
                            CreateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5672),
                            Description = "Host main event",
                            EndDate = new DateTime(2025, 6, 11, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5672),
                            EventCharacterId = "EC012",
                            IsActive = true,
                            Location = "Jakarta",
                            StartDate = new DateTime(2025, 6, 10, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5671),
                            Status = 2,
                            TaskName = "CH011",
                            UpdateDate = new DateTime(2025, 5, 19, 0, 6, 8, 815, DateTimeKind.Local).AddTicks(5673)
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ticketStatus")
                        .HasColumnType("int");

                    b.Property<int>("ticketType")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("EventId");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E001",
                            Price = 50000.0,
                            Quantity = 500,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 2,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E002",
                            Price = 40000.0,
                            Quantity = 300,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 3,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E003",
                            Price = 30000.0,
                            Quantity = 200,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 4,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E004",
                            Price = 60000.0,
                            Quantity = 600,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 5,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E005",
                            Price = 45000.0,
                            Quantity = 400,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 6,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E006",
                            Price = 55000.0,
                            Quantity = 350,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 7,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E007",
                            Price = 35000.0,
                            Quantity = 250,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 8,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E008",
                            Price = 50000.0,
                            Quantity = 450,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 9,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E009",
                            Price = 65000.0,
                            Quantity = 550,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 10,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E010",
                            Price = 70000.0,
                            Quantity = 700,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 11,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E011",
                            Price = 25000.0,
                            Quantity = 150,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 12,
                            Description = "Được giao lưu với các idol cosplayer ",
                            EventId = "E012",
                            Price = 75000.0,
                            Quantity = 800,
                            ticketStatus = 0,
                            ticketType = 0
                        },
                        new
                        {
                            TicketId = 13,
                            Description = "Được tham gia các hoạt động do chương trình tổ chức",
                            EventId = "E001",
                            Price = 75000.0,
                            Quantity = 500,
                            ticketStatus = 0,
                            ticketType = 1
                        },
                        new
                        {
                            TicketId = 14,
                            Description = "Được tham gia các hoạt động do chương trình tổ chức",
                            EventId = "E002",
                            Price = 60000.0,
                            Quantity = 500,
                            ticketStatus = 0,
                            ticketType = 1
                        },
                        new
                        {
                            TicketId = 15,
                            Description = "Được tham gia các hoạt động do chương trình tổ chức",
                            EventId = "E003",
                            Price = 45000.0,
                            Quantity = 500,
                            ticketStatus = 0,
                            ticketType = 1
                        },
                        new
                        {
                            TicketId = 16,
                            Description = "Được tham gia các hoạt động do chương trình tổ chức",
                            EventId = "E004",
                            Price = 90000.0,
                            Quantity = 500,
                            ticketStatus = 0,
                            ticketType = 1
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.TicketAccount", b =>
                {
                    b.Property<string>("TicketAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TicketCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("participantQuantity")
                        .HasColumnType("int");

                    b.HasKey("TicketAccountId");

                    b.HasIndex("AccountId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketAccount");

                    b.HasData(
                        new
                        {
                            TicketAccountId = "TA001",
                            AccountId = "A003",
                            Quantity = 2,
                            TicketCode = "TC001",
                            TicketId = 1,
                            TotalPrice = 100000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA002",
                            AccountId = "A006",
                            Quantity = 1,
                            TicketCode = "TC002",
                            TicketId = 2,
                            TotalPrice = 40000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA003",
                            AccountId = "A011",
                            Quantity = 3,
                            TicketCode = "TC003",
                            TicketId = 3,
                            TotalPrice = 90000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA004",
                            AccountId = "A014",
                            Quantity = 2,
                            TicketCode = "TC004",
                            TicketId = 4,
                            TotalPrice = 120000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA005",
                            AccountId = "A003",
                            Quantity = 4,
                            TicketCode = "TC005",
                            TicketId = 5,
                            TotalPrice = 180000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA006",
                            AccountId = "A006",
                            Quantity = 2,
                            TicketCode = "TC006",
                            TicketId = 6,
                            TotalPrice = 110000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA007",
                            AccountId = "A011",
                            Quantity = 1,
                            TicketCode = "TC007",
                            TicketId = 7,
                            TotalPrice = 35000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA008",
                            AccountId = "A014",
                            Quantity = 3,
                            TicketCode = "TC008",
                            TicketId = 8,
                            TotalPrice = 150000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA009",
                            AccountId = "A003",
                            Quantity = 2,
                            TicketCode = "TC009",
                            TicketId = 9,
                            TotalPrice = 130000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA010",
                            AccountId = "A006",
                            Quantity = 1,
                            TicketCode = "TC010",
                            TicketId = 10,
                            TotalPrice = 70000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA011",
                            AccountId = "A011",
                            Quantity = 5,
                            TicketCode = "TC011",
                            TicketId = 11,
                            TotalPrice = 125000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA012",
                            AccountId = "A014",
                            Quantity = 2,
                            TicketCode = "TC012",
                            TicketId = 12,
                            TotalPrice = 150000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA013",
                            AccountId = "A003",
                            Quantity = 3,
                            TicketCode = "TC013",
                            TicketId = 3,
                            TotalPrice = 90000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA014",
                            AccountId = "A006",
                            Quantity = 2,
                            TicketCode = "TC014",
                            TicketId = 5,
                            TotalPrice = 90000.0,
                            participantQuantity = 0
                        },
                        new
                        {
                            TicketAccountId = "TA015",
                            AccountId = "A011",
                            Quantity = 1,
                            TicketCode = "TC015",
                            TicketId = 7,
                            TotalPrice = 35000.0,
                            participantQuantity = 0
                        });
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Account", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.AccountCoupon", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("AccountCoupons")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CCSS_Repository.Entities.Coupon", "Coupon")
                        .WithMany("AccountCoupons")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Account");

                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.AccountImage", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("AccountImages")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Cart", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithOne("Cart")
                        .HasForeignKey("CCSS_Repository.Entities.Cart", "AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CartProduct", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Cart", "Cart")
                        .WithMany("CartProducts")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CCSS_Repository.Entities.Product", "Product")
                        .WithMany("CartProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Character", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Category", "Category")
                        .WithMany("Characters")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CharacterImage", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Character", "Character")
                        .WithMany("CharacterImages")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Character");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Contract", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Request", "Request")
                        .WithOne("Contract")
                        .HasForeignKey("CCSS_Repository.Entities.Contract", "RequestId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Request");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ContractCharacter", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Character", "Character")
                        .WithMany("ContractCharacters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CCSS_Repository.Entities.Contract", "Contract")
                        .WithMany("ContractCharacters")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Character");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ContractImage", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Contract", "Contract")
                        .WithMany("ContractImages")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ContractRefund", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Contract", "Contract")
                        .WithOne("ContractRefund")
                        .HasForeignKey("CCSS_Repository.Entities.ContractRefund", "ContractId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CustomerCharacter", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Category", "Category")
                        .WithMany("CustomerCharacters")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CustomerCharacterImage", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.CustomerCharacter", "CustomerCharacter")
                        .WithMany("CustomerCharacterImages")
                        .HasForeignKey("CustomerCharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CustomerCharacter");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.EventActivity", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Activity", "Activity")
                        .WithMany("EventActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.Event", "Event")
                        .WithMany("EventActivities")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Activity");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.EventCharacter", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Character", "Character")
                        .WithMany("EventCharacters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CCSS_Repository.Entities.Event", "Event")
                        .WithMany("EventCharacters")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.EventImage", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Event", "Event")
                        .WithMany("EventImages")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Event");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Feedback", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.ContractCharacter", "ContractCharacter")
                        .WithOne("Feedback")
                        .HasForeignKey("CCSS_Repository.Entities.Feedback", "ContractCharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Account");

                    b.Navigation("ContractCharacter");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Notification", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("Notifications")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Order", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.OrderProduct", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CCSS_Repository.Entities.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Payment", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.AccountCoupon", "AccountCoupon")
                        .WithOne("Payment")
                        .HasForeignKey("CCSS_Repository.Entities.Payment", "AccountCouponID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.Order", "Order")
                        .WithMany("Payment")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.TicketAccount", "TicketAccount")
                        .WithOne("Payment")
                        .HasForeignKey("CCSS_Repository.Entities.Payment", "TicketAccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AccountCoupon");

                    b.Navigation("Contract");

                    b.Navigation("Order");

                    b.Navigation("TicketAccount");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ProductImage", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.RefreshToken", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Request", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.AccountCoupon", "AccountCoupon")
                        .WithMany("Requests")
                        .HasForeignKey("AccountCouponId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("Requests")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.Package", "Package")
                        .WithMany("Requests")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.Service", "Service")
                        .WithMany("Requests")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Account");

                    b.Navigation("AccountCoupon");

                    b.Navigation("Package");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.RequestCharacter", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Character", "Character")
                        .WithMany("RequestCharacters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CCSS_Repository.Entities.Request", "Request")
                        .WithMany("RequestCharacters")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.RequestDate", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.ContractCharacter", "ContractCharacter")
                        .WithMany("RequestDates")
                        .HasForeignKey("ContractCharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.RequestCharacter", "RequestCharacter")
                        .WithMany("RequestDates")
                        .HasForeignKey("RequestCharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ContractCharacter");

                    b.Navigation("RequestCharacter");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Task", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("Tasks")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CCSS_Repository.Entities.ContractCharacter", "ContractCharacter")
                        .WithMany("Tasks")
                        .HasForeignKey("ContractCharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.EventCharacter", "EventCharacter")
                        .WithOne("Task")
                        .HasForeignKey("CCSS_Repository.Entities.Task", "EventCharacterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Account");

                    b.Navigation("ContractCharacter");

                    b.Navigation("EventCharacter");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Ticket", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Event", "Event")
                        .WithMany("Ticket")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Event");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.TicketAccount", b =>
                {
                    b.HasOne("CCSS_Repository.Entities.Account", "Account")
                        .WithMany("TicketAccounts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CCSS_Repository.Entities.Ticket", "Ticket")
                        .WithMany("TicketAccounts")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Account");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Account", b =>
                {
                    b.Navigation("AccountCoupons");

                    b.Navigation("AccountImages");

                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Feedbacks");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Requests");

                    b.Navigation("Tasks");

                    b.Navigation("TicketAccounts");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.AccountCoupon", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Activity", b =>
                {
                    b.Navigation("EventActivities");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Cart", b =>
                {
                    b.Navigation("CartProducts");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Category", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("CustomerCharacters");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Character", b =>
                {
                    b.Navigation("CharacterImages");

                    b.Navigation("ContractCharacters");

                    b.Navigation("EventCharacters");

                    b.Navigation("RequestCharacters");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Contract", b =>
                {
                    b.Navigation("ContractCharacters");

                    b.Navigation("ContractImages");

                    b.Navigation("ContractRefund")
                        .IsRequired();

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.ContractCharacter", b =>
                {
                    b.Navigation("Feedback")
                        .IsRequired();

                    b.Navigation("RequestDates");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Coupon", b =>
                {
                    b.Navigation("AccountCoupons");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.CustomerCharacter", b =>
                {
                    b.Navigation("CustomerCharacterImages");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Event", b =>
                {
                    b.Navigation("EventActivities");

                    b.Navigation("EventCharacters");

                    b.Navigation("EventImages");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.EventCharacter", b =>
                {
                    b.Navigation("Task")
                        .IsRequired();
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Order", b =>
                {
                    b.Navigation("OrderProducts");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Package", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Product", b =>
                {
                    b.Navigation("CartProducts");

                    b.Navigation("OrderProducts");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Request", b =>
                {
                    b.Navigation("Contract")
                        .IsRequired();

                    b.Navigation("RequestCharacters");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.RequestCharacter", b =>
                {
                    b.Navigation("RequestDates");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Service", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.Ticket", b =>
                {
                    b.Navigation("TicketAccounts");
                });

            modelBuilder.Entity("CCSS_Repository.Entities.TicketAccount", b =>
                {
                    b.Navigation("Payment")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
